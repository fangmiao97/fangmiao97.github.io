{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/cactus/source/css/rtl.styl","path":"css/rtl.styl","modified":1,"renderable":1},{"_id":"themes/cactus/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/FriedEgg.png","path":"images/FriedEgg.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/apple-touch-icon.png","path":"images/apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/favicon-192x192.png","path":"images/favicon-192x192.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/cactus/source/js/search.js","path":"js/search.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","path":"lib/vazir-font/Vazir-Black.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","path":"lib/vazir-font/Vazir-Black.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","path":"lib/vazir-font/Vazir-Bold.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","path":"lib/vazir-font/Vazir-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","path":"lib/vazir-font/Vazir-Light.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","path":"lib/vazir-font/Vazir-Light.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","path":"lib/vazir-font/Vazir-Medium.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","path":"lib/vazir-font/Vazir-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","path":"lib/vazir-font/Vazir-Thin.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","path":"lib/vazir-font/Vazir-Thin.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","path":"lib/vazir-font/Vazir.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","path":"lib/vazir-font/Vazir.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","path":"lib/vazir-font/font-face.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","path":"lib/jquery/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/images/logo.png","path":"images/logo.png","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","path":"lib/vazir-font/Vazir-Black.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","path":"lib/vazir-font/Vazir-Bold.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","path":"lib/vazir-font/Vazir-Black.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","path":"lib/vazir-font/Vazir-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","path":"lib/vazir-font/Vazir-Light.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","path":"lib/vazir-font/Vazir-Light.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","path":"lib/vazir-font/Vazir-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","path":"lib/vazir-font/Vazir-Medium.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","path":"lib/vazir-font/Vazir-Thin.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","path":"lib/vazir-font/Vazir-Thin.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","path":"lib/vazir-font/Vazir.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","path":"lib/vazir-font/Vazir.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","path":"lib/font-awesome/webfonts/fa-regular-400.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","path":"lib/font-awesome/webfonts/fa-regular-400.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","path":"lib/font-awesome/webfonts/fa-regular-400.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","path":"lib/justified-gallery/css/justifiedGallery.min.css","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","path":"lib/justified-gallery/js/jquery.justifiedGallery.min.js","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","path":"lib/font-awesome/webfonts/fa-brands-400.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","path":"lib/font-awesome/webfonts/fa-brands-400.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","path":"lib/font-awesome/webfonts/fa-solid-900.woff","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","path":"lib/font-awesome/webfonts/fa-brands-400.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","path":"lib/font-awesome/webfonts/fa-regular-400.svg","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","path":"lib/font-awesome/webfonts/fa-solid-900.eot","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGM-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","path":"lib/font-awesome/webfonts/fa-solid-900.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","path":"lib/meslo-LG/MesloLGM-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","path":"lib/meslo-LG/MesloLGL-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGS-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","path":"lib/meslo-LG/MesloLGL-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","path":"lib/meslo-LG/MesloLGS-Italic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","path":"lib/meslo-LG/MesloLGM-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","path":"lib/meslo-LG/MesloLGS-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","path":"lib/meslo-LG/MesloLGM-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","path":"lib/meslo-LG/MesloLGS-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","path":"lib/meslo-LG/MesloLGL-BoldItalic.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","path":"lib/meslo-LG/MesloLGL-Regular.ttf","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","path":"lib/font-awesome/webfonts/fa-solid-900.svg","modified":1,"renderable":1},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","path":"lib/font-awesome/webfonts/fa-brands-400.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/cactus/.gitignore","hash":"c5345a2c5fa6c136dbe2020a405e541b4755a259","modified":1552631684000},{"_id":"themes/cactus/LICENSE","hash":"346ece39a983b0e7858c11f785cd846cef9eb875","modified":1552631684000},{"_id":"themes/cactus/.stylintrc","hash":"eb5f48e83657928cb0cbee031373b2cd36ca0083","modified":1552631684000},{"_id":"themes/cactus/.jshintrc","hash":"2548bd6ce44422edc7e6f9f68061ab47f26c4f57","modified":1552631684000},{"_id":"themes/cactus/README.md","hash":"859d11941c46be4f7b4a6d62297ccbeb4f732bc9","modified":1552631684000},{"_id":"themes/cactus/gulpfile.js","hash":"2bae290993507026a509665ee5a5326b616f8d68","modified":1552631684000},{"_id":"themes/cactus/_config.yml","hash":"33a855149fdfcae3ce4ad90f3505f0829f907a58","modified":1552742889000},{"_id":"themes/cactus/package.json","hash":"5bbdbc429e9d46acf97baf7ac5654edde0781064","modified":1552631684000},{"_id":"source/_data/projects.json","hash":"b5c7886a69d183f7d9b3de0d41a3dfa1cd450b94","modified":1552804958833},{"_id":"source/_posts/MyLeetCodeSummarize.md","hash":"c192545e747d460b4b45e9022b8132d221b6e7bb","modified":1553833280591},{"_id":"source/_posts/JavaUtilsAPI.md","hash":"3ee85bcdd9aa525f9c34730baa99628a30b3f6c0","modified":1553831635846},{"_id":"source/_posts/StudyHBaseJavaAPI.md","hash":"7a7a584cc0abf09ea7000b1dba852565b0285308","modified":1553775926381},{"_id":"source/_posts/FluemToKafkaBaseOnDifferntTopic.md","hash":"1d817e14480db71384f60cbd6e9b87ab79bed0c2","modified":1552965327161},{"_id":"source/_posts/axioscorsquestions.md","hash":"ca4464cd21ff31da2f72043a8d61b4e56fe661c8","modified":1552887621695},{"_id":"source/_posts/minions-frontend-overview.md","hash":"04f80d2326a3fe3117ec2058ee6bd5aeada26230","modified":1553775795910},{"_id":"source/_posts/graduationDesignReferences.md","hash":"71b77c735497a60374c7f2859a078ceedf9458da","modified":1553235602251},{"_id":"source/_posts/frontendstudy.md","hash":"4752595a7b05081556b4d27e2c18d02707c3ad6f","modified":1552914839179},{"_id":"source/_posts/weeklyReport190316.md","hash":"f231ee71883a286d1267040de808d31d89e4a34f","modified":1552808814739},{"_id":"source/_posts/minionsUsage.md","hash":"936a0ee165f9318ff065db37310fc73053d80b53","modified":1553684245662},{"_id":"source/_posts/微信小程序学习意见.md","hash":"c5e6a147a6977e075087fd9f096f1e0e1642934b","modified":1552808814730},{"_id":"source/categories/index.md","hash":"e5bd5d385494eace55828aa113f3e4a836d72040","modified":1552804958835},{"_id":"source/_posts/websitesafari.md","hash":"a52fa213300637907b0bbae4f8ea75443f1a8b17","modified":1553338744231},{"_id":"source/_posts/weeklyReport190323.md","hash":"6195f6b76cfcfd02da3087a3581406f93de04f83","modified":1553328839331},{"_id":"source/search/index.md","hash":"abe46435c22ce282474d758e0b4d3b3744019b7d","modified":1552804958835},{"_id":"source/about/index.md","hash":"ce4dd2d59800b0dbf74ae1618ecc48007dc6b5a4","modified":1552825248829},{"_id":"source/tags/index.md","hash":"ff1010899a22b997faec2b7bb5882987aa606796","modified":1552804958836},{"_id":"themes/cactus/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1552631684000},{"_id":"themes/cactus/.git/config","hash":"c9a0b9fc0b92d2337dc125357f2bb7c648badb22","modified":1552631684000},{"_id":"themes/cactus/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1552631672000},{"_id":"themes/cactus/.git/index","hash":"cae7404082dba11787ebdd0b3119455cd88630c9","modified":1552811679655},{"_id":"themes/cactus/.git/packed-refs","hash":"bd252d2c670adcef64256e17789990c1239bf1ed","modified":1552631684000},{"_id":"themes/cactus/layout/archive.ejs","hash":"53de8817e37be01b3ba8fa5ca31b9cafa2f3c011","modified":1552631684000},{"_id":"themes/cactus/layout/layout.ejs","hash":"8504004f2ed78914f806c6699d9bd722318cbe56","modified":1552631684000},{"_id":"themes/cactus/layout/page.ejs","hash":"c5465d5315a7544aa466b01fd8cfb62917a8bb1d","modified":1552631684000},{"_id":"themes/cactus/layout/index.ejs","hash":"c53484094a7c30ab82b0ea984404157ab9711e71","modified":1552631684000},{"_id":"themes/cactus/layout/post.ejs","hash":"a7d164ce888a60cd3eddd9c04bc6762428fa66bb","modified":1552631684000},{"_id":"themes/cactus/languages/ca.yml","hash":"b79dd2c21dc6697c635e92db1f661a4b8d5d2305","modified":1552631684000},{"_id":"themes/cactus/languages/default.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1552631684000},{"_id":"themes/cactus/languages/en.yml","hash":"ea91a271db1a49386f97955ed72b2a668e2aea5e","modified":1552631684000},{"_id":"themes/cactus/languages/es.yml","hash":"2b1fc8b0d636123e9ee39017fa20053bd1913a5a","modified":1552631684000},{"_id":"themes/cactus/languages/fa.yml","hash":"63f32e50953af1c4bd0308a4fca5862b5287c2cb","modified":1552631684000},{"_id":"themes/cactus/languages/fr.yml","hash":"4fea266d3c522903f3eee4fffee6e66c44775005","modified":1552631684000},{"_id":"themes/cactus/languages/it.yml","hash":"62800bcae1f2d2454f87f4bcf4d7593848424f61","modified":1552631684000},{"_id":"themes/cactus/languages/nl.yml","hash":"ac0573352ad2c737a7686bcca498b985e7bd6447","modified":1552631684000},{"_id":"themes/cactus/languages/pl.yml","hash":"8a2d6dc874d86c38d42c2c861c39590647b5d536","modified":1552631684000},{"_id":"themes/cactus/languages/pt-br.yml","hash":"4859aba788a050c2d5d0b997693b0c8c24b349f7","modified":1552631684000},{"_id":"themes/cactus/languages/tr.yml","hash":"2702914007e6bade9d6861078c0e179ac05bf48c","modified":1552631684000},{"_id":"themes/cactus/scripts/merge-configs.js","hash":"2048c3415d96b17b9d84aa44bc0c25f1210525f8","modified":1552631684000},{"_id":"themes/cactus/languages/zh-CN.yml","hash":"014a172aa992d5bda5a63b62f9ded176ca6ad960","modified":1552650709000},{"_id":"themes/cactus/scripts/meta.js","hash":"fa6055a39851c9953d033e70c1614547b94dce60","modified":1552631684000},{"_id":"themes/cactus/languages/ru.yml","hash":"81b57fcd1977ef534f4bf303dbc1b4710cc7f057","modified":1552631684000},{"_id":"themes/cactus/languages/zh-TW.yml","hash":"2f4e050c9b35a67f4a7278cec3a949533c2ac16a","modified":1552631684000},{"_id":"themes/cactus/scripts/page_title.js","hash":"fa662dbdb82779af1b95e35ed7ccdf4866a53dee","modified":1552631684000},{"_id":"themes/cactus/scripts/thumbnail.js","hash":"df8829fd8c3119650037eba5ec11bdce06acff9d","modified":1552631684000},{"_id":"themes/cactus/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1552631672000},{"_id":"themes/cactus/.git/logs/HEAD","hash":"bd232c2493c41d31cc3d92fc433b3954f12ddfa2","modified":1552631684000},{"_id":"themes/cactus/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1552631672000},{"_id":"themes/cactus/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1552631672000},{"_id":"themes/cactus/layout/_partial/head.ejs","hash":"753dcb513c6f21f6f46e673942c7261cf50da886","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/header.ejs","hash":"9b2b7d6e9ab514107adf408c7ec8530fd612b3d5","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/comments.ejs","hash":"4cf8d0059e5f8bc8ae1dd1a426293583fd398052","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/footer.ejs","hash":"c3a80e347cb11022baf5e65fb4d0209b8d205693","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/pagination.ejs","hash":"23bf862b3b8a3cd831850504d9b5a24d21b005e7","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/scripts.ejs","hash":"78e3e290ab8bb6450a04b2a9c7c5b7b3da74abb8","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/search.ejs","hash":"8b4bf9cf5db0ce762a31fc3baae0f2fc004bece4","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/styles.ejs","hash":"be1b54388eb02176dd4722285dda19e3dce2e62e","modified":1552631684000},{"_id":"themes/cactus/source/css/_extend.styl","hash":"bb9752eab39afa35dc50eca5d82643bf98413bbc","modified":1552631684000},{"_id":"themes/cactus/source/css/_fonts.styl","hash":"354809b5a64e8a47a66c66fd1a28ac597c1460a6","modified":1552631684000},{"_id":"themes/cactus/source/css/_mixins.styl","hash":"1a9e309523df9685e8d088dcff0a809c58e2c392","modified":1552631684000},{"_id":"themes/cactus/source/css/_util.styl","hash":"2bfeb2e2605dd5235693b00c71a212646d2e0410","modified":1552631684000},{"_id":"themes/cactus/source/css/_variables.styl","hash":"11e68fea265ffcc9b5a59a76e60630182d39adea","modified":1552747607000},{"_id":"themes/cactus/source/css/rtl.styl","hash":"98355abe9ef3a398a5b4cb40d3d33bf86ac8d1d4","modified":1552631684000},{"_id":"themes/cactus/source/css/style.styl","hash":"d9be82f7e7145cde78e04183afc8ff13d6a16059","modified":1552631684000},{"_id":"themes/cactus/source/images/FriedEgg.png","hash":"481ca032bcd0b1b5711b8d8f36fd67cc4d26e66e","modified":1552650077000},{"_id":"themes/cactus/source/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1552631684000},{"_id":"themes/cactus/source/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1552631684000},{"_id":"themes/cactus/source/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1552631684000},{"_id":"themes/cactus/source/js/search.js","hash":"a74d0c601f820160825a2e4ad13618074d714933","modified":1552631685000},{"_id":"themes/cactus/source/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1552631684000},{"_id":"themes/cactus/.git/objects/28/d102d6035ad0e87a8233bb7f71b39d494a9d84","hash":"6f0ebd6b7ae019d963f1f7c9c4cdfb25042b0862","modified":1552811679650},{"_id":"themes/cactus/.git/objects/4d/351155b904a2d5c83a70332549f1566d35b6d7","hash":"ac9d4f644d4df41f1f34ce0cc240d4a7ee8e2850","modified":1552811679642},{"_id":"themes/cactus/.git/objects/20/7ec25b2b39e1c1cee5b80d9e98f78e9c4a2e30","hash":"663612d389e436e3f1d85b3fb36a7322049de0bb","modified":1552811679654},{"_id":"themes/cactus/.git/objects/a1/a166343d6dae05d82053ea9985305c2d9961a0","hash":"58a4124fc2ce9c83ad07968dde12f736e17df737","modified":1552811679652},{"_id":"themes/cactus/.git/objects/e7/f5b116a43a4b0ce6f9c2d697be6c160a312a44","hash":"07d8f95ef9b2ffa482d05f734a34a005662d0b3c","modified":1552811679647},{"_id":"themes/cactus/.git/refs/heads/master","hash":"a93c9a29165a9c264179c43e48c69a311155c1d0","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/actions_desktop.ejs","hash":"38aadd1ed890303dde582b722486138afee09b0a","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/date.ejs","hash":"6f2d1aa9562df343b797d25705f1945323c465fb","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/category.ejs","hash":"b5bfa049f17868fb09d9d2a7e1d5279fa0381d37","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/actions_mobile.ejs","hash":"79b234ff3c264e66b2e71c819228e62bf92b48e4","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/tag.ejs","hash":"e08fae30da060f49c087f6c121868b08eb55c795","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/gallery.ejs","hash":"9aecd8908e8a684f33dc20c02497c0f1774137c7","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/share.ejs","hash":"847a400e79b775246ca9067e40c3f104d571413d","modified":1552631684000},{"_id":"themes/cactus/layout/_partial/post/title.ejs","hash":"a060f1c6e3718494a6b1d0e1981ea0bf4e549828","modified":1552631684000},{"_id":"themes/cactus/source/css/_colors/classic.styl","hash":"0f0ec41a4165814ce69688425d5ac4d701b7cc70","modified":1552631684000},{"_id":"themes/cactus/source/css/_colors/light.styl","hash":"d09f781cb02394850737b3a9efc6693307d5bf09","modified":1552631684000},{"_id":"themes/cactus/source/css/_colors/white.styl","hash":"2b25ad24573bded8b42f9d80112eab9fadbed1a5","modified":1552631684000},{"_id":"themes/cactus/source/css/_colors/dark.styl","hash":"9c9655b42b85f754b8a573a1d4634c23c680e1bf","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/agate.styl","hash":"53027913ed8d4f75ac3e49e76aad824f0df62da3","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/arduino-light.styl","hash":"15e8572585cd708221c513dea4bdd89d8fe56c10","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/androidstudio.styl","hash":"2af0861725f97f0ee2ded67c3d2d4548c62b2d16","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/arta.styl","hash":"b3e81e3e694ceb8deed178adb8b91013c5120e30","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/ascetic.styl","hash":"32cff3bef6fac3760fe78f203096477052a90552","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-dark.styl","hash":"ce63dd8548688d88254405eedfa75b1d7c82449e","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-cave-light.styl","hash":"a5be0744a7ecf4a08f600ade4cfd555afc67bc15","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-dark.styl","hash":"c196ff0ee064af0e507823694ae39020addfc280","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-dune-light.styl","hash":"931435fbc6f974e8ce9e32722680035d248a9dc1","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-dark.styl","hash":"0bb16a4eff93688f40787abc2f9e56e7d5cc93e7","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-estuary-light.styl","hash":"344276ca9b27e51d4c907f76afe5d13cf8e60bdf","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-dark.styl","hash":"effbc5d75fa87203c847039869c22031b40d5b7d","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-forest-light.styl","hash":"95228d9f2102fad425536aac44b80b2cba1f5950","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-dark.styl","hash":"9a2e9a1d0a01bbdf158560c3ed1c134e098b2c68","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-heath-light.styl","hash":"8c8c2e445abef85273be966d59770e9ced6aac21","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-dark.styl","hash":"10ee3882fca7b97a37bd309d2d35fce9868647bb","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-lakeside-light.styl","hash":"2c54cb9bdb259ae3b5b29f63ac2469ed34b08578","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-dark.styl","hash":"84c80e6f67f62fce958d25817c277d2360272617","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-plateau-light.styl","hash":"d1a05fdd1ededc9063d181ab25bad55a164aeb4a","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-dark.styl","hash":"e32c1c70def8060fce5e790979a126da650ac642","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-savanna-light.styl","hash":"f8244c93711c7cb59dd79d2df966806b30d171ea","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-light.styl","hash":"0597342da6e2d0c5bdcc7d42dabb07322b1a4177","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-seaside-dark.styl","hash":"2edf385215bbe1985b1a10106525d362667d28c2","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-dark.styl","hash":"538a14321193cd8abf2ddc484306631e54149ffb","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/atelier-sulphurpool-light.styl","hash":"efa52713efc468abeeb2b9299704371583b857de","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/brown-paper.styl","hash":"c2326ba20a5020a66ca7895258d18833327d4334","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/brown-papersq.png","hash":"3a1332ede3a75a3d24f60b6ed69035b72da5e182","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/codepen-embed.styl","hash":"8b7b34484f76a6c2c3b1a9e49abb9b382f439ae8","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/color-brewer.styl","hash":"2a439d6214430e2f45dd4939b4dfe1fe1a20aa0f","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/dark.styl","hash":"f5e6e75958de59e87fc6be3a1668e870e20bc836","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/darkula.styl","hash":"9717efa9194837ba3fb4d762997d33075dcf8bfa","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/docco.styl","hash":"b1c176378bb275f2e8caa759f36294e42d614bf1","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/foundation.styl","hash":"bf8ddc94b4ad995b8b8805b5a4cf95004553fdac","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/far.styl","hash":"aaac3028f5e33123cd123a583cddc9290c45ec8e","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/github-gist.styl","hash":"48211a03d33e7f7ada0b261162bea06676155a71","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/github.styl","hash":"3336aeba324c6d34a6fd41fef9b47bc598f7064c","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/googlecode.styl","hash":"bda816beee7b439814b514e6869dc678822be1bc","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/grayscale.styl","hash":"bf37d8b8d1e602126c51526f0cc28807440228ed","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/gruvbox-dark.styl","hash":"76b744c14fd5600bea64731c05df97c2df75523f","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/highlightjs.styl","hash":"0e198b7a59191c7a39b641a4ddd22c948edb9358","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/hopscotch.styl","hash":"1378a6bc67a32c0cbff72ab771268b53f9aa586d","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/hybrid.styl","hash":"b8eb5c69d12f2ee5ebc50265ae271699d7f1a8d3","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/idea.styl","hash":"a02967cb51c16a34e0ee895d33ded2b823d35b21","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/index.styl","hash":"002d5596f6379cc87dbd43d9145bc764aa666be1","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/ir-black.styl","hash":"53e5d74326a4527b92272bbd6946d4fec92720e8","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/kimbie.dark.styl","hash":"45dbb168f22d739d0109745d2decd66b5f94e786","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/kimbie.light.styl","hash":"61f8baed25be05288c8604d5070afbcd9f183f49","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/kimbie.styl","hash":"51b889ca7c6fe178cfbbe28d875a6ea427184441","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/magula.styl","hash":"16d323f989b1420a0f72ef989242ece9bf17a456","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/mono-blue.styl","hash":"4c89a6ae29de67c0700585af82a60607e85df928","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/monokai-sublime.styl","hash":"c385b11345894be7e6ce3c5f08663e199933b8e4","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/monokai.styl","hash":"f87be027848ea6bee623a08ad1e17b2f5b7937ee","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/obsidian.styl","hash":"199e28326be8590883f0813ebbd54fcfaa4750fd","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/paraiso-dark.styl","hash":"f1537bd868579fa018ecdbfd2eb922dcf3ba2cac","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/pojoaque.jpg","hash":"c5fe6533b88b21f8d90d3d03954c6b29baa67791","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/pojoaque.styl","hash":"4e7b6b046b8575ac749f6aec4e953a62ada27a36","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/paraiso-light.styl","hash":"d224d1df0eb3395d9eea1344cee945c228af2911","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/paraiso.styl","hash":"75f181eece6b71d033ea0c8d6cf00ae7efb9e29b","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/railscasts.styl","hash":"b6674db9210e0c4444e4835fff2d1361f3ebd64c","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/rainbow.styl","hash":"c0cf97aae3e10fdcd10414547a711c9effbc39b8","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/school-book.png","hash":"711ec983c874e093bb89eb77afcbdf6741fa61ee","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/school-book.styl","hash":"c495c85ceb2f88eb77e55de5f42e535dd87f0b14","modified":1552742946000},{"_id":"themes/cactus/source/css/_highlight/solarized-dark.styl","hash":"90c9da5aa594383697e5b18892a7f95beb053f55","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/solarized-light.styl","hash":"aa0dd3fd25c464183b59c5575c9bee8756b397f2","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-blue.styl","hash":"f24c17d0ab815dcfaab3438cb9fe2ab4839f5e0d","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/sunburst.styl","hash":"af3eec0fd56151e55bbd49c31b151f36717611d8","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-bright.styl","hash":"7674fecb6d27350727dc0d2dc93bc018382ebbd0","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night-eighties.styl","hash":"28d751075ebabf7d0327a36f725076fe82fdf626","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/tomorrow-night.styl","hash":"16ba09b2db501e4e3e2e7d62595d9bf935bf27c4","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/tomorrow.styl","hash":"15779cf6846725c7c35fc56cac39047d7e0aec1c","modified":1552742723000},{"_id":"themes/cactus/source/css/_highlight/vs.styl","hash":"959a746f4b37aacb5d1d6ff1d57e0c045289d75d","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/xcode.styl","hash":"5e8532ae8366dcf6a4ef5e4813dc3d42ab3d0a50","modified":1552631684000},{"_id":"themes/cactus/source/css/_highlight/zenburn.styl","hash":"68ff9332ccc03f9389b15b713415cde016f8088f","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/archive.styl","hash":"ef8fc52337c4c7b010cad7c427cb78009b30f9d8","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/article.styl","hash":"7ff5b6a28dc3f2cd4ebfc4f5351054a18800bf96","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/categories.styl","hash":"a43f00e61b3507f130b8a3f8108a4eeca147c2a0","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/comments.styl","hash":"1e90f1fb9d4c155df518cacb5a537e9de9c042c1","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/footer.styl","hash":"d9b13e402808175dc90761cc4fdfe3d4808034f8","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/header.styl","hash":"662667942cc9a2caf55caa84a0fc73617d0c3aa4","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/index.styl","hash":"59c99f4ea3a73bf47ce030df166c5e33d5de31fb","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/pagination.styl","hash":"950bf517bbe7adb9a9aa4eb5ddec74ffc7598787","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/search.styl","hash":"159be002780c62a77f46947cf854a7342fba24f4","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/tags.styl","hash":"d571d5c7c960300d29c5f0ec3fe1140322ecd6b3","modified":1552631684000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff","hash":"37443d0040f0d7af381c955e4c15919a15d0349e","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.woff2","hash":"0a257c8b60e0f20802c1dc8daeed2d3cb0d44f17","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff","hash":"df15fd1e74b6f4a50bea57e2b44d9627f38495b5","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.woff2","hash":"62447a951d48b21c4696ae72df4bc4adef636e26","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff","hash":"32ae5c0d1d5943c8bb8e0f6ab07c3269c6f8b8a8","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.woff2","hash":"ef07a250766fea840c1049e67c0405d9216ee0a8","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff","hash":"f5653059b2a5929516e4aab02329a978600b9b67","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.woff2","hash":"668400ae92700965f03f2371faaee0ab8c8347c3","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff","hash":"ad4d46a99a1daf6353c86c79ac3a2b030213859c","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.woff2","hash":"c3be79b553ec394db71268d604b1d29183b867dc","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff","hash":"bbee70033f0f5882e9869e417b69c6a38f56f187","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.woff2","hash":"30ce165216db078951a690a6ad665b9b78f5dd81","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/font-face.css","hash":"8f2bf6b59ae1f2ed4c2fead6cea4b8314fcf62e5","modified":1552631685000},{"_id":"themes/cactus/.git/objects/pack/pack-1069fb9df61b4b19cdf935ef6c87bd7595e3bcc9.idx","hash":"c320599d76b8d602ed473efcae925b3014f27955","modified":1552631684000},{"_id":"themes/cactus/source/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1552631685000},{"_id":"themes/cactus/source/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1552631684000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.eot","hash":"13d026ff857c853cbd0dc519b6e58669db309441","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.eot","hash":"f76ec625e15522ff60d21f7a9a3b71c65bc27556","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Black.ttf","hash":"594dc3344ad14903c247615427d1009709f0f5a4","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Bold.ttf","hash":"2e6c9df9f775373fb1988ae8529aa8f05313dae6","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.eot","hash":"3edffd7bb61eee8cd46b57225f9f9e5264e3362b","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Light.ttf","hash":"9f1e2934098a6a4a7c5584c8f3fa24a707070da3","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.ttf","hash":"295f7e02c9b157e7ea63ad09613b00ceab85c5cd","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Medium.eot","hash":"1f5a73db7947ef22c8a2bb19d6449b80496c03c4","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.eot","hash":"08e1503d1181188690fd9c81860d6c890c1465f6","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir-Thin.ttf","hash":"a6aa450ee6e0f85786474ca6b04827ef97e81af4","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.ttf","hash":"f22b219824026e490a581ddb3b36b07997dff0e3","modified":1552631685000},{"_id":"themes/cactus/source/lib/vazir-font/Vazir.eot","hash":"31a9219c25fe1991fb745ec8dbbcf45c6094a702","modified":1552631685000},{"_id":"themes/cactus/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1552631684000},{"_id":"themes/cactus/.git/logs/refs/heads/master","hash":"bd232c2493c41d31cc3d92fc433b3954f12ddfa2","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/post/actions_mobile.styl","hash":"0d2966c1d870392476864af8ee3ba312ba30cb82","modified":1552631684000},{"_id":"themes/cactus/source/css/_partial/post/actions_desktop.styl","hash":"4ef72ea70f7c840b2843bf7717aaafae3b6fc241","modified":1552631684000},{"_id":"themes/cactus/source/lib/font-awesome/css/all.min.css","hash":"cf1a3fd771900af34f2af22142beecfb47367548","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"d902f8db3e021155f177f698a252fb98d6e61768","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"42ff503f20e97503cef8e5b2ec10ae07699d7c01","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"c140085833a38abec6b7df99d4ccac93eb266031","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"7b3f44b4d3028f3c87ddf0f4bd62511c9bf4a87e","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"9784edb76f8a2ed595ea4bf74d46cda4eff3b303","modified":1552631685000},{"_id":"themes/cactus/source/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1552631685000},{"_id":"themes/cactus/source/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"92da6e3c7121e21cdfde25ef08797a3937a683e1","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"644ece8263d2f96b087eebf7f6d4e309e5898eb5","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"f9d835a0f9248b1bb33d66968e87c4a50103ed8d","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"80d33a73cbb60e206ef6f5c898988641576c7dda","modified":1552631685000},{"_id":"themes/cactus/.git/logs/refs/remotes/origin/HEAD","hash":"bd232c2493c41d31cc3d92fc433b3954f12ddfa2","modified":1552631684000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"19e302760e39e25a5f8d90d6cd0164ef6cd74f8c","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"33e86c0ad6fb9c5c0c8c2af4cb2d790c6b14a8aa","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"10740942ec6b3f4985529d343402d0bf32f9f847","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"c445864a9646948e0d7ff44930ad732ee61427d8","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1552631685000},{"_id":"themes/cactus/source/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"ed6c1ed8f24df909f40fe5e5c652d7ff9570c821","modified":1552631685000},{"_id":"themes/cactus/source/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"b0bb9e6ac7709206b9510f1718516d89aead5b21","modified":1552631685000},{"_id":"themes/cactus/.git/objects/pack/pack-1069fb9df61b4b19cdf935ef6c87bd7595e3bcc9.pack","hash":"c775499c435ae486a8da3fdf751feedef8dbf0c3","modified":1552631684000},{"_id":"public/search.xml","hash":"99bc6fd98d824ab0870550a833240411c317471c","modified":1553833295904},{"_id":"public/categories/index.html","hash":"40abfbf4b8d83015c4a51266228bc20097c8cdfc","modified":1553833296333},{"_id":"public/search/index.html","hash":"7354caab8e74ce44c5eb913428a9c476db646168","modified":1553833296333},{"_id":"public/tags/index.html","hash":"879cd52fc03cedf0f769d31667a3dbf7f5c512ea","modified":1553833296334},{"_id":"public/about/index.html","hash":"feb93db1387a0b84d0fc4887f40765f06027f24f","modified":1553833296334},{"_id":"public/2019/03/28/StudyHBaseJavaAPI/index.html","hash":"205654a8f80861cfd1ddd5e19d2fcb0e0625edb0","modified":1553833296334},{"_id":"public/2019/03/27/minionsUsage/index.html","hash":"234884104d5427ee3fc21efcb1864a41750f2b8f","modified":1553833296334},{"_id":"public/2019/03/23/weeklyReport190323/index.html","hash":"ef55f12bd17c9abd710fc285a76824509988b8ed","modified":1553833296334},{"_id":"public/2019/03/18/frontendstudy/index.html","hash":"b844c794a4cbc33f11a877c5bab9f393b51b5099","modified":1553833296334},{"_id":"public/2019/03/18/axioscorsquestions/index.html","hash":"97f6f279a902907ba1b17a246d4ad4933a53235e","modified":1553833296334},{"_id":"public/2019/03/18/JavaUtilsAPI/index.html","hash":"d28bd4645e1c4924f6252878840ae801be28fe56","modified":1553833296334},{"_id":"public/2019/03/18/websitesafari/index.html","hash":"d3b2001a5ad3a016c3b54802def6377f1a08d62f","modified":1553833296334},{"_id":"public/archives/index.html","hash":"a6190bf9a1642da62af5bbafe51f328f904eac5b","modified":1553833296334},{"_id":"public/archives/page/2/index.html","hash":"d2c1da38a9d7e6027cae4116fba10f56c40fc011","modified":1553833296334},{"_id":"public/archives/2019/index.html","hash":"1a169e5c3700dfa364c500068a4f39452aade545","modified":1553833296335},{"_id":"public/archives/2019/page/2/index.html","hash":"adaaae586256888e8150dd4af85dbe7f09483d2b","modified":1553833296335},{"_id":"public/archives/2019/03/index.html","hash":"bc3f2c4b74ace1c960ae68e4de7ea5028b953588","modified":1553833296335},{"_id":"public/archives/2019/03/page/2/index.html","hash":"ec9b071e451f8f36a030b99f69bbd42b96e2c2fc","modified":1553833296335},{"_id":"public/categories/毕业设计/index.html","hash":"fd5290ca51d9adc99e27c220b887d8cf4c26bd68","modified":1553833296335},{"_id":"public/categories/技术总结/index.html","hash":"93d725dcc3cf77e04b22fad1121c5c954a7a94d0","modified":1553833296335},{"_id":"public/categories/每周记录/index.html","hash":"17bd8defe88d4606489e396910dd4cec878b9a55","modified":1553833296335},{"_id":"public/page/2/index.html","hash":"9029d40b8955db9cab4cf5a6640020fba362ff02","modified":1553833296335},{"_id":"public/index.html","hash":"6525a458457ea7f2dab4805e86e343a8a299d3a8","modified":1553833296335},{"_id":"public/tags/Java/index.html","hash":"93fde1fad80c711e45e27616d29acd17bc5d0f8c","modified":1553833296335},{"_id":"public/tags/开发相关/index.html","hash":"892d70f344170d74820e913d3a9a21a7de73ebd8","modified":1553833296335},{"_id":"public/tags/Flume/index.html","hash":"8aaf7e50a00f77c7ca5e98cdc797344ab048eb4f","modified":1553833296335},{"_id":"public/tags/axios/index.html","hash":"23a96e6bc053713e0606a6b2032e0e75a883e9e0","modified":1553833296335},{"_id":"public/tags/CORS/index.html","hash":"f789a400e6ca4aaeff399fbff61da358d15c90f4","modified":1553833296335},{"_id":"public/tags/react-ES6/index.html","hash":"4d62a2ab10400b3d6202e0d3fa19b0495cb61c8e","modified":1553833296335},{"_id":"public/tags/LeetCode/index.html","hash":"2d5a1700402549fe38859c567bd5d731a94d41a7","modified":1553833296336},{"_id":"public/2019/03/21/minions-frontend-overview/index.html","hash":"49009d3c0ff7e5c36bab7d11b773f051fd63ba8a","modified":1553833296336},{"_id":"public/2019/03/19/graduationDesignReferences/index.html","hash":"6bf221b2871b8211faa5ed26a97edd271bab5708","modified":1553833296336},{"_id":"public/2019/03/16/weeklyReport190316/index.html","hash":"2948616ffaa7cece36b7ba273056dd130735185d","modified":1553833296336},{"_id":"public/2019/03/16/FluemToKafkaBaseOnDifferntTopic/index.html","hash":"fd63d35a8e3ccaa3d3702b6bcc33841c5b38c9a4","modified":1553833296336},{"_id":"public/2019/03/15/MyLeetCodeSummarize/index.html","hash":"082f9859aecbe8e49a62c9189d6abf720404b3f5","modified":1553833296336},{"_id":"public/2019/03/14/微信小程序学习意见/index.html","hash":"e4a4c7334b75a871445bd54fff9edb767e9fe2b0","modified":1553833296336},{"_id":"public/images/FriedEgg.png","hash":"481ca032bcd0b1b5711b8d8f36fd67cc4d26e66e","modified":1553833296345},{"_id":"public/images/apple-touch-icon.png","hash":"57e2def34682655f41a0be2d083f16765ba7858b","modified":1553833296345},{"_id":"public/images/favicon-192x192.png","hash":"96e6fcbbb13a5914a6131391e210eb7dfd13d692","modified":1553833296346},{"_id":"public/images/favicon.ico","hash":"189f9842bcb79a6f8f9e8445bc8bbd773443826b","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Black.woff2","hash":"0a257c8b60e0f20802c1dc8daeed2d3cb0d44f17","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Black.woff","hash":"37443d0040f0d7af381c955e4c15919a15d0349e","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Bold.woff","hash":"df15fd1e74b6f4a50bea57e2b44d9627f38495b5","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Bold.woff2","hash":"62447a951d48b21c4696ae72df4bc4adef636e26","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Light.woff","hash":"32ae5c0d1d5943c8bb8e0f6ab07c3269c6f8b8a8","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Light.woff2","hash":"ef07a250766fea840c1049e67c0405d9216ee0a8","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Medium.woff","hash":"f5653059b2a5929516e4aab02329a978600b9b67","modified":1553833296346},{"_id":"public/lib/vazir-font/Vazir-Medium.woff2","hash":"668400ae92700965f03f2371faaee0ab8c8347c3","modified":1553833296347},{"_id":"public/lib/vazir-font/Vazir-Thin.woff","hash":"ad4d46a99a1daf6353c86c79ac3a2b030213859c","modified":1553833296347},{"_id":"public/lib/vazir-font/Vazir.woff","hash":"bbee70033f0f5882e9869e417b69c6a38f56f187","modified":1553833296347},{"_id":"public/lib/vazir-font/Vazir-Thin.woff2","hash":"c3be79b553ec394db71268d604b1d29183b867dc","modified":1553833296347},{"_id":"public/lib/vazir-font/Vazir.woff2","hash":"30ce165216db078951a690a6ad665b9b78f5dd81","modified":1553833296347},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"d902f8db3e021155f177f698a252fb98d6e61768","modified":1553833296347},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.eot","hash":"42ff503f20e97503cef8e5b2ec10ae07699d7c01","modified":1553833296347},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff","hash":"7b3f44b4d3028f3c87ddf0f4bd62511c9bf4a87e","modified":1553833296348},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.ttf","hash":"c140085833a38abec6b7df99d4ccac93eb266031","modified":1553833296348},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"9784edb76f8a2ed595ea4bf74d46cda4eff3b303","modified":1553833296348},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"92da6e3c7121e21cdfde25ef08797a3937a683e1","modified":1553833296348},{"_id":"public/lib/vazir-font/Vazir-Black.eot","hash":"13d026ff857c853cbd0dc519b6e58669db309441","modified":1553833296708},{"_id":"public/lib/vazir-font/Vazir-Bold.eot","hash":"f76ec625e15522ff60d21f7a9a3b71c65bc27556","modified":1553833296709},{"_id":"public/lib/vazir-font/Vazir-Black.ttf","hash":"594dc3344ad14903c247615427d1009709f0f5a4","modified":1553833296709},{"_id":"public/lib/vazir-font/Vazir-Bold.ttf","hash":"2e6c9df9f775373fb1988ae8529aa8f05313dae6","modified":1553833296709},{"_id":"public/lib/vazir-font/Vazir-Light.eot","hash":"3edffd7bb61eee8cd46b57225f9f9e5264e3362b","modified":1553833296709},{"_id":"public/lib/vazir-font/Vazir-Light.ttf","hash":"9f1e2934098a6a4a7c5584c8f3fa24a707070da3","modified":1553833296709},{"_id":"public/lib/vazir-font/Vazir-Medium.ttf","hash":"295f7e02c9b157e7ea63ad09613b00ceab85c5cd","modified":1553833296710},{"_id":"public/lib/vazir-font/Vazir-Medium.eot","hash":"1f5a73db7947ef22c8a2bb19d6449b80496c03c4","modified":1553833296710},{"_id":"public/lib/vazir-font/Vazir-Thin.eot","hash":"08e1503d1181188690fd9c81860d6c890c1465f6","modified":1553833296710},{"_id":"public/lib/vazir-font/Vazir-Thin.ttf","hash":"a6aa450ee6e0f85786474ca6b04827ef97e81af4","modified":1553833296710},{"_id":"public/lib/vazir-font/Vazir.ttf","hash":"f22b219824026e490a581ddb3b36b07997dff0e3","modified":1553833296710},{"_id":"public/lib/vazir-font/Vazir.eot","hash":"31a9219c25fe1991fb745ec8dbbcf45c6094a702","modified":1553833296710},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.eot","hash":"644ece8263d2f96b087eebf7f6d4e309e5898eb5","modified":1553833296711},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff","hash":"f9d835a0f9248b1bb33d66968e87c4a50103ed8d","modified":1553833296711},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff","hash":"80d33a73cbb60e206ef6f5c898988641576c7dda","modified":1553833296711},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.ttf","hash":"19e302760e39e25a5f8d90d6cd0164ef6cd74f8c","modified":1553833296711},{"_id":"public/css/rtl.css","hash":"c2c2bc4ce311b3129275e009e903088b45e7ed77","modified":1553833296719},{"_id":"public/js/search.js","hash":"a74d0c601f820160825a2e4ad13618074d714933","modified":1553833296719},{"_id":"public/js/main.js","hash":"584c5a69ac81a483a1c4377a2e2cf326c2795e7b","modified":1553833296719},{"_id":"public/lib/vazir-font/font-face.css","hash":"8f2bf6b59ae1f2ed4c2fead6cea4b8314fcf62e5","modified":1553833296720},{"_id":"public/lib/justified-gallery/css/justifiedGallery.min.css","hash":"92bb6e468a1db7fbd99ccb960e15e28572254263","modified":1553833296720},{"_id":"public/css/style.css","hash":"10f63e07167fb0ad043828ee3f547aae7150f6a8","modified":1553833296720},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.eot","hash":"10740942ec6b3f4985529d343402d0bf32f9f847","modified":1553833296720},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.svg","hash":"33e86c0ad6fb9c5c0c8c2af4cb2d790c6b14a8aa","modified":1553833296736},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.ttf","hash":"c445864a9646948e0d7ff44930ad732ee61427d8","modified":1553833296736},{"_id":"public/lib/justified-gallery/js/jquery.justifiedGallery.min.js","hash":"82ab395176c927ffbb2f7c95132ee0a06cd5d64a","modified":1553833296744},{"_id":"public/images/logo.png","hash":"0e3029251dfda26adee2761f71377297e8c26871","modified":1553833296749},{"_id":"public/lib/meslo-LG/MesloLGM-Italic.ttf","hash":"93ebc5098cf57a32b7b8d297681f31692c09bdfa","modified":1553833296810},{"_id":"public/lib/meslo-LG/MesloLGS-BoldItalic.ttf","hash":"926035f0156cccf1b0ca507347f39bf9c510f51e","modified":1553833296810},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"cf1a3fd771900af34f2af22142beecfb47367548","modified":1553833296840},{"_id":"public/lib/meslo-LG/MesloLGS-Italic.ttf","hash":"9d757cc9f928fc83b2133283dd639c12b11d94ad","modified":1553833296840},{"_id":"public/lib/meslo-LG/MesloLGL-BoldItalic.ttf","hash":"b7d24ab1e4fad720f31a2b0cca1904ce1740d846","modified":1553833296840},{"_id":"public/lib/meslo-LG/MesloLGS-Bold.ttf","hash":"f9918fb93d6ab6850f5d38069a999c311af78816","modified":1553833296880},{"_id":"public/lib/meslo-LG/MesloLGL-Bold.ttf","hash":"34f7db59f1d023294e69976aa20b7d52b86165a4","modified":1553833296880},{"_id":"public/lib/meslo-LG/MesloLGS-Regular.ttf","hash":"de559f8d70d5b1ab2810597bfd0b1b9506f3ef01","modified":1553833296881},{"_id":"public/lib/meslo-LG/MesloLGL-Regular.ttf","hash":"6c090d6bff3928fbf8a5f4104e58ed7f421aea7c","modified":1553833296881},{"_id":"public/lib/meslo-LG/MesloLGM-Regular.ttf","hash":"20ce1fc7ae1254558ca044ae48283faaa58897e5","modified":1553833296882},{"_id":"public/lib/meslo-LG/MesloLGM-BoldItalic.ttf","hash":"b542b9591fbf33925d93f0695b6e123a9f0cfd43","modified":1553833296900},{"_id":"public/lib/meslo-LG/MesloLGM-Bold.ttf","hash":"58be4b7760e9a84daa81929d046f9a15c4fd1c1a","modified":1553833296900},{"_id":"public/lib/meslo-LG/MesloLGL-Italic.ttf","hash":"9a23c6898b0943bd3d96c04df9a0f66e919451d8","modified":1553833296925},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.svg","hash":"ed6c1ed8f24df909f40fe5e5c652d7ff9570c821","modified":1553833296944},{"_id":"public/lib/jquery/jquery.min.js","hash":"0dc32db4aa9c5f03f3b38c47d883dbd4fed13aae","modified":1553833296964},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.svg","hash":"b0bb9e6ac7709206b9510f1718516d89aead5b21","modified":1553833296964}],"Category":[{"name":"技术总结","_id":"cjttk83n30004lcqj4qmowl8a"},{"name":"毕业设计","_id":"cjttk83ny000llcqjahp1c62n"},{"name":"每周记录","_id":"cjttk83ob000ylcqj1f135zl7"}],"Data":[{"_id":"projects","data":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}],"Page":[{"title":"categories","date":"2019-03-15T07:38:37.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2019-03-15 15:38:37\ntype: categories\n---\n","updated":"2019-03-17T06:42:38.835Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjttk83mw0001lcqjrp5wu6zr","content":"","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":""},{"title":"search","type":"search","date":"2019-03-15T07:47:20.000Z","_content":"","source":"search/index.md","raw":"---\ntitle: search\ntype: search\ndate: 2019-03-15 15:47:20\n---\n","updated":"2019-03-17T06:42:38.835Z","path":"search/index.html","comments":1,"layout":"page","_id":"cjttk83n10003lcqjzl1wo25a","content":"","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":""},{"title":"About Me","date":"2019-03-15T07:04:35.000Z","_content":"# Enjoy Fruits!\n\n\n\n<center>\n⁣🍐🍌🍋🍋🍊🍊🍎🍎🍎\n🍐🍏🍌🍋🍋🍊🍊🍎🍎\n🍆🍐🍐🍌🍋🍋🍊🍊🍎\n🍇🍇🍏      🍋🍊🍊\n🍎🍆🍇  ⁣😎  🍋🍋🍊\n🍒🍓🍇      🍌🍋🍋\n🍊🍎🍉🍇🍆🍐🍐🍌🍋\n🍊🍊🍓🍎🍇🍇🍏🍐🍌\n🍋🍊🍊🍎🍓🍇🍇🍐🍏\n</center>","source":"about/index.md","raw":"---\ntitle: About Me\ndate: 2019-03-15 15:04:35\n---\n# Enjoy Fruits!\n\n\n\n<center>\n⁣🍐🍌🍋🍋🍊🍊🍎🍎🍎\n🍐🍏🍌🍋🍋🍊🍊🍎🍎\n🍆🍐🍐🍌🍋🍋🍊🍊🍎\n🍇🍇🍏      🍋🍊🍊\n🍎🍆🍇  ⁣😎  🍋🍋🍊\n🍒🍓🍇      🍌🍋🍋\n🍊🍎🍉🍇🍆🍐🍐🍌🍋\n🍊🍊🍓🍎🍇🍇🍏🍐🍌\n🍋🍊🍊🍎🍓🍇🍇🍐🍏\n</center>","updated":"2019-03-17T12:20:48.829Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjttk83n80007lcqjqboo00mj","content":"<h1 id=\"Enjoy-Fruits\"><a href=\"#Enjoy-Fruits\" class=\"headerlink\" title=\"Enjoy Fruits!\"></a>Enjoy Fruits!</h1><center><br>⁣🍐🍌🍋🍋🍊🍊🍎🍎🍎<br>🍐🍏🍌🍋🍋🍊🍊🍎🍎<br>🍆🍐🍐🍌🍋🍋🍊🍊🍎<br>🍇🍇🍏      🍋🍊🍊<br>🍎🍆🍇  ⁣😎  🍋🍋🍊<br>🍒🍓🍇      🍌🍋🍋<br>🍊🍎🍉🍇🍆🍐🍐🍌🍋<br>🍊🍊🍓🍎🍇🍇🍏🍐🍌<br>🍋🍊🍊🍎🍓🍇🍇🍐🍏<br></center>","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h1 id=\"Enjoy-Fruits\"><a href=\"#Enjoy-Fruits\" class=\"headerlink\" title=\"Enjoy Fruits!\"></a>Enjoy Fruits!</h1><center><br>⁣🍐🍌🍋🍋🍊🍊🍎🍎🍎<br>🍐🍏🍌🍋🍋🍊🍊🍎🍎<br>🍆🍐🍐🍌🍋🍋🍊🍊🍎<br>🍇🍇🍏      🍋🍊🍊<br>🍎🍆🍇  ⁣😎  🍋🍋🍊<br>🍒🍓🍇      🍌🍋🍋<br>🍊🍎🍉🍇🍆🍐🍐🍌🍋<br>🍊🍊🍓🍎🍇🍇🍏🍐🍌<br>🍋🍊🍊🍎🍓🍇🍇🍐🍏<br></center>"},{"title":"tags","type":"tags","date":"2019-03-15T07:35:40.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ntype: tags\ndate: 2019-03-15 15:35:40\n---\n","updated":"2019-03-17T06:42:38.836Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjttk83pk0019lcqju1ow8xz4","content":"","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":""}],"Post":[{"title":"Java中常用API","date":"2019-03-17T16:00:00.000Z","_content":"## 转换类型\n* String转Char[]:\n\n```java\n    Char[] a = string。toCharArray();\n```\n\n* Char[]转String\n\n```java\n    //只能用\n    return new String(char[])\n```\n\n## String操作\n\n```java\n    //创建String\n    StringBuilder res = new StringBuilder();\n    //添加字符\n    res.append(something);\n    //转换\n    String(res) stringbuilder.toString()\n    //reverse\n    res.reverse();\n    //去掉首位空格\n    res.trim();\n    //取char\n    string.charAt(int i)\n    //大小写转变\n    toLowerCase()\n    toUpperCase()\n```\n\n## 数字操作\n\n```java\n    //sqrt\n    Math.sqrt(num);\n```\n","source":"_posts/JavaUtilsAPI.md","raw":"---\ntitle: Java中常用API\ndate: 2019/3/18\ncategories:\n    - 技术总结\ntags:\n    - Java\n---\n## 转换类型\n* String转Char[]:\n\n```java\n    Char[] a = string。toCharArray();\n```\n\n* Char[]转String\n\n```java\n    //只能用\n    return new String(char[])\n```\n\n## String操作\n\n```java\n    //创建String\n    StringBuilder res = new StringBuilder();\n    //添加字符\n    res.append(something);\n    //转换\n    String(res) stringbuilder.toString()\n    //reverse\n    res.reverse();\n    //去掉首位空格\n    res.trim();\n    //取char\n    string.charAt(int i)\n    //大小写转变\n    toLowerCase()\n    toUpperCase()\n```\n\n## 数字操作\n\n```java\n    //sqrt\n    Math.sqrt(num);\n```\n","slug":"JavaUtilsAPI","published":1,"updated":"2019-03-29T03:53:55.846Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83mm0000lcqjkm4bn61t","content":"<h2 id=\"转换类型\"><a href=\"#转换类型\" class=\"headerlink\" title=\"转换类型\"></a>转换类型</h2><ul>\n<li>String转Char[]:</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Char[] a = string。toCharArray();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Char[]转String</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//只能用</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(<span class=\"keyword\">char</span>[])</span><br></pre></td></tr></table></figure>\n<h2 id=\"String操作\"><a href=\"#String操作\" class=\"headerlink\" title=\"String操作\"></a>String操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建String</span></span><br><span class=\"line\">StringBuilder res = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\"><span class=\"comment\">//添加字符</span></span><br><span class=\"line\">res.append(something);</span><br><span class=\"line\"><span class=\"comment\">//转换</span></span><br><span class=\"line\">String(res) stringbuilder.toString()</span><br><span class=\"line\"><span class=\"comment\">//reverse</span></span><br><span class=\"line\">res.reverse();</span><br><span class=\"line\"><span class=\"comment\">//去掉首位空格</span></span><br><span class=\"line\">res.trim();</span><br><span class=\"line\"><span class=\"comment\">//取char</span></span><br><span class=\"line\">string.charAt(<span class=\"keyword\">int</span> i)</span><br><span class=\"line\"><span class=\"comment\">//大小写转变</span></span><br><span class=\"line\">toLowerCase()</span><br><span class=\"line\">toUpperCase()</span><br></pre></td></tr></table></figure>\n<h2 id=\"数字操作\"><a href=\"#数字操作\" class=\"headerlink\" title=\"数字操作\"></a>数字操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//sqrt</span></span><br><span class=\"line\">Math.sqrt(num);</span><br></pre></td></tr></table></figure>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"转换类型\"><a href=\"#转换类型\" class=\"headerlink\" title=\"转换类型\"></a>转换类型</h2><ul>\n<li>String转Char[]:</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Char[] a = string。toCharArray();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Char[]转String</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//只能用</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String(<span class=\"keyword\">char</span>[])</span><br></pre></td></tr></table></figure>\n<h2 id=\"String操作\"><a href=\"#String操作\" class=\"headerlink\" title=\"String操作\"></a>String操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建String</span></span><br><span class=\"line\">StringBuilder res = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\"><span class=\"comment\">//添加字符</span></span><br><span class=\"line\">res.append(something);</span><br><span class=\"line\"><span class=\"comment\">//转换</span></span><br><span class=\"line\">String(res) stringbuilder.toString()</span><br><span class=\"line\"><span class=\"comment\">//reverse</span></span><br><span class=\"line\">res.reverse();</span><br><span class=\"line\"><span class=\"comment\">//去掉首位空格</span></span><br><span class=\"line\">res.trim();</span><br><span class=\"line\"><span class=\"comment\">//取char</span></span><br><span class=\"line\">string.charAt(<span class=\"keyword\">int</span> i)</span><br><span class=\"line\"><span class=\"comment\">//大小写转变</span></span><br><span class=\"line\">toLowerCase()</span><br><span class=\"line\">toUpperCase()</span><br></pre></td></tr></table></figure>\n<h2 id=\"数字操作\"><a href=\"#数字操作\" class=\"headerlink\" title=\"数字操作\"></a>数字操作</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//sqrt</span></span><br><span class=\"line\">Math.sqrt(num);</span><br></pre></td></tr></table></figure>\n"},{"title":"学习HBase JAVA API","date":"2019-03-27T16:00:00.000Z","tages":["HBase"],"_content":"## 网站\n* [HBase with Java](https://www.baeldung.com/hbase)\n* [HBase表概念](https://www.bilibili.com/video/av21911076)\n* [Filter 过滤器](https://www.jianshu.com/p/fb4bd7a2a23e)","source":"_posts/StudyHBaseJavaAPI.md","raw":"---\ntitle: 学习HBase JAVA API\ndate: 2019/03/28\ncategories: \n    - 技术总结\ntages:\n    - HBase\n---\n## 网站\n* [HBase with Java](https://www.baeldung.com/hbase)\n* [HBase表概念](https://www.bilibili.com/video/av21911076)\n* [Filter 过滤器](https://www.jianshu.com/p/fb4bd7a2a23e)","slug":"StudyHBaseJavaAPI","published":1,"updated":"2019-03-28T12:25:26.381Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83my0002lcqjw2vqr1p9","content":"<h2 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h2><ul>\n<li><a href=\"https://www.baeldung.com/hbase\" target=\"_blank\" rel=\"noopener\">HBase with Java</a></li>\n<li><a href=\"https://www.bilibili.com/video/av21911076\" target=\"_blank\" rel=\"noopener\">HBase表概念</a></li>\n<li><a href=\"https://www.jianshu.com/p/fb4bd7a2a23e\" target=\"_blank\" rel=\"noopener\">Filter 过滤器</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"网站\"><a href=\"#网站\" class=\"headerlink\" title=\"网站\"></a>网站</h2><ul>\n<li><a href=\"https://www.baeldung.com/hbase\" target=\"_blank\" rel=\"noopener\">HBase with Java</a></li>\n<li><a href=\"https://www.bilibili.com/video/av21911076\" target=\"_blank\" rel=\"noopener\">HBase表概念</a></li>\n<li><a href=\"https://www.jianshu.com/p/fb4bd7a2a23e\" target=\"_blank\" rel=\"noopener\">Filter 过滤器</a></li>\n</ul>\n"},{"title":"Flume使用interceptors向不同的Kafka Consumers发送基于Topic维度的信息","date":"2019-03-15T16:00:00.000Z","_content":"# 需求\n* 后端接口通过log4j转发给flume的Event是直接发给avro source，之后要交给kafka sink供不同的应用处理。如果对于不同的topic都用一个agent处理感觉略尴尬（没有尝试），所以用一个avro source进行接收，用flume的interceptor进行按topic分流。\n\n# 方案流程\n* 前端\n    * 向后端上传数据时，加入topic字段\n  \n```javascript\naxios.get(\"url/logtest\", {\n            params:{\n                K_topic: 'specialTopic',\n                contents: 'contents'\n            }\n```\n\n* 后端\n    * 在log4j的logger.info中加入topic字段\n\n```java\nlogger.info(\"topic:\" + k_topic + \" \" + \"contents:\"+ contents);\n```\n\n* flume配置（部分）\n\n```\n#source interceptor\nagent1.sources.avro-source.interceptors=i1\nagent1.sources.avro-source.interceptors.i1.type=regex_extractor\nagent1.sources.avro-source.interceptors.i1.regex=topic:(.*?) contents:(.*?)\nagent1.sources.avro-source.interceptors.i1.serializers=s1 s2\n#agent1.sources.avro-source.interceptors.i1.serializers.s1.type=default\nagent1.sources.avro-source.interceptors.i1.serializers.s1.name=topic\n#agent1.sources.avro-source.interceptors.i1.serializers.s2.type=default\nagent1.sources.avro-source.interceptors.i1.serializers.s2.name=contents\n\n#define sink\nagent1.sinks.kafka-sink.type=org.apache.flume.sink.kafka.KafkaSink\nagent1.sinks.kafka-sink.topic = %{topic}\n```\n\n* 结果\n不同的kafka Producer能够接收不同topic的埋点数据，之后的consumer也能消费到了\n\n# 参考文档\n* [regex-extractor-interceptor正则表达式interceptor](http://flume.apache.org/releases/content/1.9.0/FlumeUserGuide.html#regex-extractor-interceptor)\n* [interceptor](http://lxw1234.com/archives/2015/11/543.htm)","source":"_posts/FluemToKafkaBaseOnDifferntTopic.md","raw":"---\ntitle: Flume使用interceptors向不同的Kafka Consumers发送基于Topic维度的信息\ndate: 2019/3/16\ncategories:\n    - 技术总结\ntags:\n    - 开发相关\n    - Flume\n---\n# 需求\n* 后端接口通过log4j转发给flume的Event是直接发给avro source，之后要交给kafka sink供不同的应用处理。如果对于不同的topic都用一个agent处理感觉略尴尬（没有尝试），所以用一个avro source进行接收，用flume的interceptor进行按topic分流。\n\n# 方案流程\n* 前端\n    * 向后端上传数据时，加入topic字段\n  \n```javascript\naxios.get(\"url/logtest\", {\n            params:{\n                K_topic: 'specialTopic',\n                contents: 'contents'\n            }\n```\n\n* 后端\n    * 在log4j的logger.info中加入topic字段\n\n```java\nlogger.info(\"topic:\" + k_topic + \" \" + \"contents:\"+ contents);\n```\n\n* flume配置（部分）\n\n```\n#source interceptor\nagent1.sources.avro-source.interceptors=i1\nagent1.sources.avro-source.interceptors.i1.type=regex_extractor\nagent1.sources.avro-source.interceptors.i1.regex=topic:(.*?) contents:(.*?)\nagent1.sources.avro-source.interceptors.i1.serializers=s1 s2\n#agent1.sources.avro-source.interceptors.i1.serializers.s1.type=default\nagent1.sources.avro-source.interceptors.i1.serializers.s1.name=topic\n#agent1.sources.avro-source.interceptors.i1.serializers.s2.type=default\nagent1.sources.avro-source.interceptors.i1.serializers.s2.name=contents\n\n#define sink\nagent1.sinks.kafka-sink.type=org.apache.flume.sink.kafka.KafkaSink\nagent1.sinks.kafka-sink.topic = %{topic}\n```\n\n* 结果\n不同的kafka Producer能够接收不同topic的埋点数据，之后的consumer也能消费到了\n\n# 参考文档\n* [regex-extractor-interceptor正则表达式interceptor](http://flume.apache.org/releases/content/1.9.0/FlumeUserGuide.html#regex-extractor-interceptor)\n* [interceptor](http://lxw1234.com/archives/2015/11/543.htm)","slug":"FluemToKafkaBaseOnDifferntTopic","published":1,"updated":"2019-03-19T03:15:27.161Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83n60006lcqjswu3yzgx","content":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><ul>\n<li>后端接口通过log4j转发给flume的Event是直接发给avro source，之后要交给kafka sink供不同的应用处理。如果对于不同的topic都用一个agent处理感觉略尴尬（没有尝试），所以用一个avro source进行接收，用flume的interceptor进行按topic分流。</li>\n</ul>\n<h1 id=\"方案流程\"><a href=\"#方案流程\" class=\"headerlink\" title=\"方案流程\"></a>方案流程</h1><ul>\n<li>前端<ul>\n<li>向后端上传数据时，加入topic字段</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.get(<span class=\"string\">\"url/logtest\"</span>, &#123;</span><br><span class=\"line\">            params:&#123;</span><br><span class=\"line\">                K_topic: <span class=\"string\">'specialTopic'</span>,</span><br><span class=\"line\">                contents: <span class=\"string\">'contents'</span></span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>后端<ul>\n<li>在log4j的logger.info中加入topic字段</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logger.info(<span class=\"string\">\"topic:\"</span> + k_topic + <span class=\"string\">\" \"</span> + <span class=\"string\">\"contents:\"</span>+ contents);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>flume配置（部分）</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#source interceptor</span><br><span class=\"line\">agent1.sources.avro-source.interceptors=i1</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.type=regex_extractor</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.regex=topic:(.*?) contents:(.*?)</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.serializers=s1 s2</span><br><span class=\"line\">#agent1.sources.avro-source.interceptors.i1.serializers.s1.type=default</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.serializers.s1.name=topic</span><br><span class=\"line\">#agent1.sources.avro-source.interceptors.i1.serializers.s2.type=default</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.serializers.s2.name=contents</span><br><span class=\"line\"></span><br><span class=\"line\">#define sink</span><br><span class=\"line\">agent1.sinks.kafka-sink.type=org.apache.flume.sink.kafka.KafkaSink</span><br><span class=\"line\">agent1.sinks.kafka-sink.topic = %&#123;topic&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>结果<br>不同的kafka Producer能够接收不同topic的埋点数据，之后的consumer也能消费到了</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><ul>\n<li><a href=\"http://flume.apache.org/releases/content/1.9.0/FlumeUserGuide.html#regex-extractor-interceptor\" target=\"_blank\" rel=\"noopener\">regex-extractor-interceptor正则表达式interceptor</a></li>\n<li><a href=\"http://lxw1234.com/archives/2015/11/543.htm\" target=\"_blank\" rel=\"noopener\">interceptor</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h1 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h1><ul>\n<li>后端接口通过log4j转发给flume的Event是直接发给avro source，之后要交给kafka sink供不同的应用处理。如果对于不同的topic都用一个agent处理感觉略尴尬（没有尝试），所以用一个avro source进行接收，用flume的interceptor进行按topic分流。</li>\n</ul>\n<h1 id=\"方案流程\"><a href=\"#方案流程\" class=\"headerlink\" title=\"方案流程\"></a>方案流程</h1><ul>\n<li>前端<ul>\n<li>向后端上传数据时，加入topic字段</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">axios.get(<span class=\"string\">\"url/logtest\"</span>, &#123;</span><br><span class=\"line\">            params:&#123;</span><br><span class=\"line\">                K_topic: <span class=\"string\">'specialTopic'</span>,</span><br><span class=\"line\">                contents: <span class=\"string\">'contents'</span></span><br><span class=\"line\">            &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>后端<ul>\n<li>在log4j的logger.info中加入topic字段</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logger.info(<span class=\"string\">\"topic:\"</span> + k_topic + <span class=\"string\">\" \"</span> + <span class=\"string\">\"contents:\"</span>+ contents);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>flume配置（部分）</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#source interceptor</span><br><span class=\"line\">agent1.sources.avro-source.interceptors=i1</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.type=regex_extractor</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.regex=topic:(.*?) contents:(.*?)</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.serializers=s1 s2</span><br><span class=\"line\">#agent1.sources.avro-source.interceptors.i1.serializers.s1.type=default</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.serializers.s1.name=topic</span><br><span class=\"line\">#agent1.sources.avro-source.interceptors.i1.serializers.s2.type=default</span><br><span class=\"line\">agent1.sources.avro-source.interceptors.i1.serializers.s2.name=contents</span><br><span class=\"line\"></span><br><span class=\"line\">#define sink</span><br><span class=\"line\">agent1.sinks.kafka-sink.type=org.apache.flume.sink.kafka.KafkaSink</span><br><span class=\"line\">agent1.sinks.kafka-sink.topic = %&#123;topic&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>结果<br>不同的kafka Producer能够接收不同topic的埋点数据，之后的consumer也能消费到了</li>\n</ul>\n<h1 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h1><ul>\n<li><a href=\"http://flume.apache.org/releases/content/1.9.0/FlumeUserGuide.html#regex-extractor-interceptor\" target=\"_blank\" rel=\"noopener\">regex-extractor-interceptor正则表达式interceptor</a></li>\n<li><a href=\"http://lxw1234.com/archives/2015/11/543.htm\" target=\"_blank\" rel=\"noopener\">interceptor</a></li>\n</ul>\n"},{"title":"关于axios的CORS问题的解决","date":"2019-03-17T16:00:00.000Z","_content":"## Axios基础\n* 参考网站\n\t* [中文文档](https://www.jianshu.com/p/7a9fbcbb1114)\n\t* [使用说明](https://www.kancloud.cn/yunye/axios/234845)\n* 上下文知识\n\t* [Promise in ES6](http://es6.ruanyifeng.com/#docs/promise)\n\t* [浏览器同源政策及其规避方法](http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html) 同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据\n\t* [跨域资源共享 CORS 详解](http://www.ruanyifeng.com/blog/2016/04/cors.html) 实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信\n\n## 问题描述\nAccess to XMLHttpRequest at 'http://localhost:8080/hello' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\n\n## 解决方法\n* [Spring利用@CrossOrigin注解 实现 支持CORS跨域请求](https://my.oschina.net/hccake/blog/886606) 在controller类头部加入注释\n\n```java\n@CrossOrigin(origins = \"*\", maxAge = 3600)\n```","source":"_posts/axioscorsquestions.md","raw":"---\ntitle: 关于axios的CORS问题的解决\ndate: 2019/3/18\ncategories:\n    - 技术总结\ntags: \n    - axios\n    - CORS\n---\n## Axios基础\n* 参考网站\n\t* [中文文档](https://www.jianshu.com/p/7a9fbcbb1114)\n\t* [使用说明](https://www.kancloud.cn/yunye/axios/234845)\n* 上下文知识\n\t* [Promise in ES6](http://es6.ruanyifeng.com/#docs/promise)\n\t* [浏览器同源政策及其规避方法](http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html) 同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据\n\t* [跨域资源共享 CORS 详解](http://www.ruanyifeng.com/blog/2016/04/cors.html) 实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信\n\n## 问题描述\nAccess to XMLHttpRequest at 'http://localhost:8080/hello' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.\n\n## 解决方法\n* [Spring利用@CrossOrigin注解 实现 支持CORS跨域请求](https://my.oschina.net/hccake/blog/886606) 在controller类头部加入注释\n\n```java\n@CrossOrigin(origins = \"*\", maxAge = 3600)\n```","slug":"axioscorsquestions","published":1,"updated":"2019-03-18T05:40:21.695Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83na0008lcqjyncemvrc","content":"<h2 id=\"Axios基础\"><a href=\"#Axios基础\" class=\"headerlink\" title=\"Axios基础\"></a>Axios基础</h2><ul>\n<li>参考网站<ul>\n<li><a href=\"https://www.jianshu.com/p/7a9fbcbb1114\" target=\"_blank\" rel=\"noopener\">中文文档</a></li>\n<li><a href=\"https://www.kancloud.cn/yunye/axios/234845\" target=\"_blank\" rel=\"noopener\">使用说明</a></li>\n</ul>\n</li>\n<li>上下文知识<ul>\n<li><a href=\"http://es6.ruanyifeng.com/#docs/promise\" target=\"_blank\" rel=\"noopener\">Promise in ES6</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html\" target=\"_blank\" rel=\"noopener\">浏览器同源政策及其规避方法</a> 同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据</li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/04/cors.html\" target=\"_blank\" rel=\"noopener\">跨域资源共享 CORS 详解</a> 实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Access to XMLHttpRequest at ‘<a href=\"http://localhost:8080/hello&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/hello&#39;</a> from origin ‘<a href=\"http://localhost:3000&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost:3000&#39;</a> has been blocked by CORS policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><ul>\n<li><a href=\"https://my.oschina.net/hccake/blog/886606\" target=\"_blank\" rel=\"noopener\">Spring利用@CrossOrigin注解 实现 支持CORS跨域请求</a> 在controller类头部加入注释</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CrossOrigin</span>(origins = <span class=\"string\">\"*\"</span>, maxAge = <span class=\"number\">3600</span>)</span><br></pre></td></tr></table></figure>","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"Axios基础\"><a href=\"#Axios基础\" class=\"headerlink\" title=\"Axios基础\"></a>Axios基础</h2><ul>\n<li>参考网站<ul>\n<li><a href=\"https://www.jianshu.com/p/7a9fbcbb1114\" target=\"_blank\" rel=\"noopener\">中文文档</a></li>\n<li><a href=\"https://www.kancloud.cn/yunye/axios/234845\" target=\"_blank\" rel=\"noopener\">使用说明</a></li>\n</ul>\n</li>\n<li>上下文知识<ul>\n<li><a href=\"http://es6.ruanyifeng.com/#docs/promise\" target=\"_blank\" rel=\"noopener\">Promise in ES6</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html\" target=\"_blank\" rel=\"noopener\">浏览器同源政策及其规避方法</a> 同源政策的目的，是为了保证用户信息的安全，防止恶意的网站窃取数据</li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/04/cors.html\" target=\"_blank\" rel=\"noopener\">跨域资源共享 CORS 详解</a> 实现CORS通信的关键是服务器。只要服务器实现了CORS接口，就可以跨源通信</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>Access to XMLHttpRequest at ‘<a href=\"http://localhost:8080/hello&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/hello&#39;</a> from origin ‘<a href=\"http://localhost:3000&#39;\" target=\"_blank\" rel=\"noopener\">http://localhost:3000&#39;</a> has been blocked by CORS policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource.</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><ul>\n<li><a href=\"https://my.oschina.net/hccake/blog/886606\" target=\"_blank\" rel=\"noopener\">Spring利用@CrossOrigin注解 实现 支持CORS跨域请求</a> 在controller类头部加入注释</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@CrossOrigin</span>(origins = <span class=\"string\">\"*\"</span>, maxAge = <span class=\"number\">3600</span>)</span><br></pre></td></tr></table></figure>"},{"title":"Minions-frontend 框架技术结构","date":"2019-03-20T16:00:00.000Z","_content":"## 前端技术选型\n* react 16.8.4\n* Ant Design ([Pro v1](https://v1.pro.ant.design/docs/getting-started-cn)) 3.15.0\n* XMLRequest:axios 0.18.0\n* 路由: react-router-dom\n* [精选组件](https://ant.design/docs/react/recommendation-cn)\n\n## 目录结构\n* components 放置个性化组件\n    * PageView 展示PV相关数据组件\n* contents 主体部分抽象布局\n    * Overview 今日数据概览\n    * HistoryView 历史数据查询\n* pages 页面（目前为单页面）\n\n## React-Router\n* react-router-dom 是对 react-router 在浏览器开发环境下的封装，所以没有本质差别\n\n## ant design pro\n* 需要引入css文件\n`import 'ant-design-pro/dist/ant-design-pro.css';`\n\n## react相关\n* [dangerouslySetInnerHTML, 让React正常显示你的html代码](http://www.cnblogs.com/xianyulaodi/p/5038258.html)\n* [时间显示组件](https://github.com/pvoznyuk/react-live-clock)\n    * 获取今天的时间\n    \n    `const today = moment().format('YYYYMMDD');`\n    \n* react setState是异步调用的\n    * 使用props和componentWillReceiveProps(nextProps)来解决\n    * [见topicid的变换](https://github.com/fangmiao97/MessageWiKiPro-frontend/blob/master/src/TopicInfo.js)\n    * 在minions中的历史数据页面，需要根据选择的不同日期显示相关数据。日期选择为父组件中的state.date改变，并将state.date传给child组件。child接收后通过componentWillReceiveProps来进行更新\n\n* RestFul API\n","source":"_posts/minions-frontend-overview.md","raw":"---\ntitle: Minions-frontend 框架技术结构\ndate: 2019/3/21\ncategories:\n    - 毕业设计\n---\n## 前端技术选型\n* react 16.8.4\n* Ant Design ([Pro v1](https://v1.pro.ant.design/docs/getting-started-cn)) 3.15.0\n* XMLRequest:axios 0.18.0\n* 路由: react-router-dom\n* [精选组件](https://ant.design/docs/react/recommendation-cn)\n\n## 目录结构\n* components 放置个性化组件\n    * PageView 展示PV相关数据组件\n* contents 主体部分抽象布局\n    * Overview 今日数据概览\n    * HistoryView 历史数据查询\n* pages 页面（目前为单页面）\n\n## React-Router\n* react-router-dom 是对 react-router 在浏览器开发环境下的封装，所以没有本质差别\n\n## ant design pro\n* 需要引入css文件\n`import 'ant-design-pro/dist/ant-design-pro.css';`\n\n## react相关\n* [dangerouslySetInnerHTML, 让React正常显示你的html代码](http://www.cnblogs.com/xianyulaodi/p/5038258.html)\n* [时间显示组件](https://github.com/pvoznyuk/react-live-clock)\n    * 获取今天的时间\n    \n    `const today = moment().format('YYYYMMDD');`\n    \n* react setState是异步调用的\n    * 使用props和componentWillReceiveProps(nextProps)来解决\n    * [见topicid的变换](https://github.com/fangmiao97/MessageWiKiPro-frontend/blob/master/src/TopicInfo.js)\n    * 在minions中的历史数据页面，需要根据选择的不同日期显示相关数据。日期选择为父组件中的state.date改变，并将state.date传给child组件。child接收后通过componentWillReceiveProps来进行更新\n\n* RestFul API\n","slug":"minions-frontend-overview","published":1,"updated":"2019-03-28T12:23:15.910Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83nb0009lcqjyyxsh4pg","content":"<h2 id=\"前端技术选型\"><a href=\"#前端技术选型\" class=\"headerlink\" title=\"前端技术选型\"></a>前端技术选型</h2><ul>\n<li>react 16.8.4</li>\n<li>Ant Design (<a href=\"https://v1.pro.ant.design/docs/getting-started-cn\" target=\"_blank\" rel=\"noopener\">Pro v1</a>) 3.15.0</li>\n<li>XMLRequest:axios 0.18.0</li>\n<li>路由: react-router-dom</li>\n<li><a href=\"https://ant.design/docs/react/recommendation-cn\" target=\"_blank\" rel=\"noopener\">精选组件</a></li>\n</ul>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><ul>\n<li>components 放置个性化组件<ul>\n<li>PageView 展示PV相关数据组件</li>\n</ul>\n</li>\n<li>contents 主体部分抽象布局<ul>\n<li>Overview 今日数据概览</li>\n<li>HistoryView 历史数据查询</li>\n</ul>\n</li>\n<li>pages 页面（目前为单页面）</li>\n</ul>\n<h2 id=\"React-Router\"><a href=\"#React-Router\" class=\"headerlink\" title=\"React-Router\"></a>React-Router</h2><ul>\n<li>react-router-dom 是对 react-router 在浏览器开发环境下的封装，所以没有本质差别</li>\n</ul>\n<h2 id=\"ant-design-pro\"><a href=\"#ant-design-pro\" class=\"headerlink\" title=\"ant design pro\"></a>ant design pro</h2><ul>\n<li>需要引入css文件<br><code>import &#39;ant-design-pro/dist/ant-design-pro.css&#39;;</code></li>\n</ul>\n<h2 id=\"react相关\"><a href=\"#react相关\" class=\"headerlink\" title=\"react相关\"></a>react相关</h2><ul>\n<li><a href=\"http://www.cnblogs.com/xianyulaodi/p/5038258.html\" target=\"_blank\" rel=\"noopener\">dangerouslySetInnerHTML, 让React正常显示你的html代码</a></li>\n<li><p><a href=\"https://github.com/pvoznyuk/react-live-clock\" target=\"_blank\" rel=\"noopener\">时间显示组件</a></p>\n<ul>\n<li><p>获取今天的时间</p>\n<p><code>const today = moment().format(&#39;YYYYMMDD&#39;);</code></p>\n</li>\n</ul>\n</li>\n<li><p>react setState是异步调用的</p>\n<ul>\n<li>使用props和componentWillReceiveProps(nextProps)来解决</li>\n<li><a href=\"https://github.com/fangmiao97/MessageWiKiPro-frontend/blob/master/src/TopicInfo.js\" target=\"_blank\" rel=\"noopener\">见topicid的变换</a></li>\n<li>在minions中的历史数据页面，需要根据选择的不同日期显示相关数据。日期选择为父组件中的state.date改变，并将state.date传给child组件。child接收后通过componentWillReceiveProps来进行更新</li>\n</ul>\n</li>\n<li><p>RestFul API</p>\n</li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"前端技术选型\"><a href=\"#前端技术选型\" class=\"headerlink\" title=\"前端技术选型\"></a>前端技术选型</h2><ul>\n<li>react 16.8.4</li>\n<li>Ant Design (<a href=\"https://v1.pro.ant.design/docs/getting-started-cn\" target=\"_blank\" rel=\"noopener\">Pro v1</a>) 3.15.0</li>\n<li>XMLRequest:axios 0.18.0</li>\n<li>路由: react-router-dom</li>\n<li><a href=\"https://ant.design/docs/react/recommendation-cn\" target=\"_blank\" rel=\"noopener\">精选组件</a></li>\n</ul>\n<h2 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h2><ul>\n<li>components 放置个性化组件<ul>\n<li>PageView 展示PV相关数据组件</li>\n</ul>\n</li>\n<li>contents 主体部分抽象布局<ul>\n<li>Overview 今日数据概览</li>\n<li>HistoryView 历史数据查询</li>\n</ul>\n</li>\n<li>pages 页面（目前为单页面）</li>\n</ul>\n<h2 id=\"React-Router\"><a href=\"#React-Router\" class=\"headerlink\" title=\"React-Router\"></a>React-Router</h2><ul>\n<li>react-router-dom 是对 react-router 在浏览器开发环境下的封装，所以没有本质差别</li>\n</ul>\n<h2 id=\"ant-design-pro\"><a href=\"#ant-design-pro\" class=\"headerlink\" title=\"ant design pro\"></a>ant design pro</h2><ul>\n<li>需要引入css文件<br><code>import &#39;ant-design-pro/dist/ant-design-pro.css&#39;;</code></li>\n</ul>\n<h2 id=\"react相关\"><a href=\"#react相关\" class=\"headerlink\" title=\"react相关\"></a>react相关</h2><ul>\n<li><a href=\"http://www.cnblogs.com/xianyulaodi/p/5038258.html\" target=\"_blank\" rel=\"noopener\">dangerouslySetInnerHTML, 让React正常显示你的html代码</a></li>\n<li><p><a href=\"https://github.com/pvoznyuk/react-live-clock\" target=\"_blank\" rel=\"noopener\">时间显示组件</a></p>\n<ul>\n<li><p>获取今天的时间</p>\n<p><code>const today = moment().format(&#39;YYYYMMDD&#39;);</code></p>\n</li>\n</ul>\n</li>\n<li><p>react setState是异步调用的</p>\n<ul>\n<li>使用props和componentWillReceiveProps(nextProps)来解决</li>\n<li><a href=\"https://github.com/fangmiao97/MessageWiKiPro-frontend/blob/master/src/TopicInfo.js\" target=\"_blank\" rel=\"noopener\">见topicid的变换</a></li>\n<li>在minions中的历史数据页面，需要根据选择的不同日期显示相关数据。日期选择为父组件中的state.date改变，并将state.date传给child组件。child接收后通过componentWillReceiveProps来进行更新</li>\n</ul>\n</li>\n<li><p>RestFul API</p>\n</li>\n</ul>\n"},{"title":"毕业设计参考文献记录🎓","date":"2019-03-18T16:00:00.000Z","_content":"## 实时流处理应用场景\n* [Spark Streaming在实时计算中的应用研究](http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&filename=DNZS201825112&uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!):延时限制在秒级的应用场景,电商实时营销。\n* [基于Spark Streaming的实时日志分析与信息管理系统的设计与实现](http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&dbname=CMFD201901&filename=1018894622.nh&uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&v=MDAwNDFyQ1VSTE9mWk9kbUZpRGhWNzdJVkYyNkZydXhHdGZPclpFYlBJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUY=):分析DDoS攻击。系统日志的信息安全审计\n* [基于海量网络日志数据的实时流处理系统的设计与实现](http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&dbname=CMFD201801&filename=1017292559.nh&v=MTU5MjBlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTE9mWk9kbUZ5amtWTHZMVkYyNkdiR3hITlRKcHBFYlBJUjg=&uid=WEEvREcwSlJHSldRa1FhdkJkVG1CcDNRL2o5cjJMcDdKU2FGb00xSGNGND0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!):可以参考这部分的绪论部分\n\n## 日志信息隐藏关系\n* [大数据下基于Spark的电商实时推荐系统的设计与实现](http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&filename=WJSY201705010&UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&autoLogin=0)\n\n## 研究目的/出发点\n* [互联网闭环](https://www.zhihu.com/question/20624296/answer/15731592)\n\n## 关于spark streaming业务算法的创新\n* [对有状态计算操作的基数计算的精确计算方法和估算方法进行了比较分析](http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&filename=WJSY201705010&UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&autoLogin=0)\n","source":"_posts/graduationDesignReferences.md","raw":"---\ntitle: 毕业设计参考文献记录🎓\ndate: 2019/3/19\ncategories: \n    - 毕业设计\ntags:\n---\n## 实时流处理应用场景\n* [Spark Streaming在实时计算中的应用研究](http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&filename=DNZS201825112&uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!):延时限制在秒级的应用场景,电商实时营销。\n* [基于Spark Streaming的实时日志分析与信息管理系统的设计与实现](http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&dbname=CMFD201901&filename=1018894622.nh&uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&v=MDAwNDFyQ1VSTE9mWk9kbUZpRGhWNzdJVkYyNkZydXhHdGZPclpFYlBJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUY=):分析DDoS攻击。系统日志的信息安全审计\n* [基于海量网络日志数据的实时流处理系统的设计与实现](http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&dbname=CMFD201801&filename=1017292559.nh&v=MTU5MjBlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTE9mWk9kbUZ5amtWTHZMVkYyNkdiR3hITlRKcHBFYlBJUjg=&uid=WEEvREcwSlJHSldRa1FhdkJkVG1CcDNRL2o5cjJMcDdKU2FGb00xSGNGND0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!):可以参考这部分的绪论部分\n\n## 日志信息隐藏关系\n* [大数据下基于Spark的电商实时推荐系统的设计与实现](http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&filename=WJSY201705010&UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&autoLogin=0)\n\n## 研究目的/出发点\n* [互联网闭环](https://www.zhihu.com/question/20624296/answer/15731592)\n\n## 关于spark streaming业务算法的创新\n* [对有状态计算操作的基数计算的精确计算方法和估算方法进行了比较分析](http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&filename=WJSY201705010&UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&autoLogin=0)\n","slug":"graduationDesignReferences","published":1,"updated":"2019-03-22T06:20:02.251Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83nj000dlcqjm8brwsgy","content":"<h2 id=\"实时流处理应用场景\"><a href=\"#实时流处理应用场景\" class=\"headerlink\" title=\"实时流处理应用场景\"></a>实时流处理应用场景</h2><ul>\n<li><a href=\"http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&amp;filename=DNZS201825112&amp;uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!\" target=\"_blank\" rel=\"noopener\">Spark Streaming在实时计算中的应用研究</a>:延时限制在秒级的应用场景,电商实时营销。</li>\n<li><a href=\"http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&amp;dbname=CMFD201901&amp;filename=1018894622.nh&amp;uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MDAwNDFyQ1VSTE9mWk9kbUZpRGhWNzdJVkYyNkZydXhHdGZPclpFYlBJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUY=\" target=\"_blank\" rel=\"noopener\">基于Spark Streaming的实时日志分析与信息管理系统的设计与实现</a>:分析DDoS攻击。系统日志的信息安全审计</li>\n<li><a href=\"http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&amp;dbname=CMFD201801&amp;filename=1017292559.nh&amp;v=MTU5MjBlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTE9mWk9kbUZ5amtWTHZMVkYyNkdiR3hITlRKcHBFYlBJUjg=&amp;uid=WEEvREcwSlJHSldRa1FhdkJkVG1CcDNRL2o5cjJMcDdKU2FGb00xSGNGND0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!\" target=\"_blank\" rel=\"noopener\">基于海量网络日志数据的实时流处理系统的设计与实现</a>:可以参考这部分的绪论部分</li>\n</ul>\n<h2 id=\"日志信息隐藏关系\"><a href=\"#日志信息隐藏关系\" class=\"headerlink\" title=\"日志信息隐藏关系\"></a>日志信息隐藏关系</h2><ul>\n<li><a href=\"http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&amp;filename=WJSY201705010&amp;UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;autoLogin=0\" target=\"_blank\" rel=\"noopener\">大数据下基于Spark的电商实时推荐系统的设计与实现</a></li>\n</ul>\n<h2 id=\"研究目的-出发点\"><a href=\"#研究目的-出发点\" class=\"headerlink\" title=\"研究目的/出发点\"></a>研究目的/出发点</h2><ul>\n<li><a href=\"https://www.zhihu.com/question/20624296/answer/15731592\" target=\"_blank\" rel=\"noopener\">互联网闭环</a></li>\n</ul>\n<h2 id=\"关于spark-streaming业务算法的创新\"><a href=\"#关于spark-streaming业务算法的创新\" class=\"headerlink\" title=\"关于spark streaming业务算法的创新\"></a>关于spark streaming业务算法的创新</h2><ul>\n<li><a href=\"http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&amp;filename=WJSY201705010&amp;UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;autoLogin=0\" target=\"_blank\" rel=\"noopener\">对有状态计算操作的基数计算的精确计算方法和估算方法进行了比较分析</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"实时流处理应用场景\"><a href=\"#实时流处理应用场景\" class=\"headerlink\" title=\"实时流处理应用场景\"></a>实时流处理应用场景</h2><ul>\n<li><a href=\"http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&amp;filename=DNZS201825112&amp;uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!\" target=\"_blank\" rel=\"noopener\">Spark Streaming在实时计算中的应用研究</a>:延时限制在秒级的应用场景,电商实时营销。</li>\n<li><a href=\"http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&amp;dbname=CMFD201901&amp;filename=1018894622.nh&amp;uid=WEEvREcwSlJHSldRa1Fhb09jT0pkRlg1TFVqTzAvOUVLVWZDZmNBOEF0az0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MDAwNDFyQ1VSTE9mWk9kbUZpRGhWNzdJVkYyNkZydXhHdGZPclpFYlBJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUY=\" target=\"_blank\" rel=\"noopener\">基于Spark Streaming的实时日志分析与信息管理系统的设计与实现</a>:分析DDoS攻击。系统日志的信息安全审计</li>\n<li><a href=\"http://new.gb.oversea.cnki.net/KCMS/detail/detail.aspx?dbcode=CMFD&amp;dbname=CMFD201801&amp;filename=1017292559.nh&amp;v=MTU5MjBlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTE9mWk9kbUZ5amtWTHZMVkYyNkdiR3hITlRKcHBFYlBJUjg=&amp;uid=WEEvREcwSlJHSldRa1FhdkJkVG1CcDNRL2o5cjJMcDdKU2FGb00xSGNGND0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!\" target=\"_blank\" rel=\"noopener\">基于海量网络日志数据的实时流处理系统的设计与实现</a>:可以参考这部分的绪论部分</li>\n</ul>\n<h2 id=\"日志信息隐藏关系\"><a href=\"#日志信息隐藏关系\" class=\"headerlink\" title=\"日志信息隐藏关系\"></a>日志信息隐藏关系</h2><ul>\n<li><a href=\"http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&amp;filename=WJSY201705010&amp;UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;autoLogin=0\" target=\"_blank\" rel=\"noopener\">大数据下基于Spark的电商实时推荐系统的设计与实现</a></li>\n</ul>\n<h2 id=\"研究目的-出发点\"><a href=\"#研究目的-出发点\" class=\"headerlink\" title=\"研究目的/出发点\"></a>研究目的/出发点</h2><ul>\n<li><a href=\"https://www.zhihu.com/question/20624296/answer/15731592\" target=\"_blank\" rel=\"noopener\">互联网闭环</a></li>\n</ul>\n<h2 id=\"关于spark-streaming业务算法的创新\"><a href=\"#关于spark-streaming业务算法的创新\" class=\"headerlink\" title=\"关于spark streaming业务算法的创新\"></a>关于spark streaming业务算法的创新</h2><ul>\n<li><a href=\"http://new.gb.oversea.cnki.net/KXReader/Detail?dbcode=CJFD&amp;filename=WJSY201705010&amp;UID=WEEvREcwSlJHSldRa1FhdkJkVG1CcDc5Ym4weGJzK0hVZ1FjREZpT1JEcz0%3d%249A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;autoLogin=0\" target=\"_blank\" rel=\"noopener\">对有状态计算操作的基数计算的精确计算方法和估算方法进行了比较分析</a></li>\n</ul>\n"},{"title":"移动互联实验室-前端组-参考培训计划🖥（1期）","date":"2019-03-17T16:00:00.000Z","_content":" \n ## 基础知识🚶\n * [HTML代码练习](http://www.imooc.com/code/49)(第4周-第6周）\n * [JavaScript语言入门教程](https://wangdoc.com/javascript/)\n * [Js视频](http://www.imooc.com/learn/36)\n \n \n ## 进阶🏃\n * [ECMAScript 6 入门](http://es6.ruanyifeng.com/)\n * [ES6快速入门](https://www.imooc.com/learn/955)\n * [React入门教程](http://www.ruanyifeng.com/blog/2015/03/react.html)\n * 使用React的网站：\n \t* [Facebook](http://www.facebook.com/)\n \t* [Instagram](http://instagram.com/)\n \t* [知乎](https://www.zhihu.com/)\n \n \n ## React🚕\n * [从React脚手架工具学习React项目的最佳实践](https://juejin.im/post/59dcd87451882578c2084515)\n * [组件库（了解）](https://juejin.im/entry/5b3f3c82e51d45190905d3a2)\n * [React 技术栈系列教程](http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html)","source":"_posts/frontendstudy.md","raw":"---\ntitle: 移动互联实验室-前端组-参考培训计划🖥（1期）\ndate: 2019/3/18\ncategories: \n    - 技术总结\ntags:\n    - react ES6\n---\n \n ## 基础知识🚶\n * [HTML代码练习](http://www.imooc.com/code/49)(第4周-第6周）\n * [JavaScript语言入门教程](https://wangdoc.com/javascript/)\n * [Js视频](http://www.imooc.com/learn/36)\n \n \n ## 进阶🏃\n * [ECMAScript 6 入门](http://es6.ruanyifeng.com/)\n * [ES6快速入门](https://www.imooc.com/learn/955)\n * [React入门教程](http://www.ruanyifeng.com/blog/2015/03/react.html)\n * 使用React的网站：\n \t* [Facebook](http://www.facebook.com/)\n \t* [Instagram](http://instagram.com/)\n \t* [知乎](https://www.zhihu.com/)\n \n \n ## React🚕\n * [从React脚手架工具学习React项目的最佳实践](https://juejin.im/post/59dcd87451882578c2084515)\n * [组件库（了解）](https://juejin.im/entry/5b3f3c82e51d45190905d3a2)\n * [React 技术栈系列教程](http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html)","slug":"frontendstudy","published":1,"updated":"2019-03-18T13:13:59.179Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83no000elcqj8w1vujkc","content":"<h2 id=\"基础知识🚶\"><a href=\"#基础知识🚶\" class=\"headerlink\" title=\"基础知识🚶\"></a>基础知识🚶</h2><ul>\n<li><a href=\"http://www.imooc.com/code/49\" target=\"_blank\" rel=\"noopener\">HTML代码练习</a>(第4周-第6周）</li>\n<li><a href=\"https://wangdoc.com/javascript/\" target=\"_blank\" rel=\"noopener\">JavaScript语言入门教程</a></li>\n<li><a href=\"http://www.imooc.com/learn/36\" target=\"_blank\" rel=\"noopener\">Js视频</a></li>\n</ul>\n<h2 id=\"进阶🏃\"><a href=\"#进阶🏃\" class=\"headerlink\" title=\"进阶🏃\"></a>进阶🏃</h2><ul>\n<li><a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">ECMAScript 6 入门</a></li>\n<li><a href=\"https://www.imooc.com/learn/955\" target=\"_blank\" rel=\"noopener\">ES6快速入门</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\" target=\"_blank\" rel=\"noopener\">React入门教程</a></li>\n<li>使用React的网站：<ul>\n<li><a href=\"http://www.facebook.com/\" target=\"_blank\" rel=\"noopener\">Facebook</a></li>\n<li><a href=\"http://instagram.com/\" target=\"_blank\" rel=\"noopener\">Instagram</a></li>\n<li><a href=\"https://www.zhihu.com/\" target=\"_blank\" rel=\"noopener\">知乎</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"React🚕\"><a href=\"#React🚕\" class=\"headerlink\" title=\"React🚕\"></a>React🚕</h2><ul>\n<li><a href=\"https://juejin.im/post/59dcd87451882578c2084515\" target=\"_blank\" rel=\"noopener\">从React脚手架工具学习React项目的最佳实践</a></li>\n<li><a href=\"https://juejin.im/entry/5b3f3c82e51d45190905d3a2\" target=\"_blank\" rel=\"noopener\">组件库（了解）</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\" target=\"_blank\" rel=\"noopener\">React 技术栈系列教程</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"基础知识🚶\"><a href=\"#基础知识🚶\" class=\"headerlink\" title=\"基础知识🚶\"></a>基础知识🚶</h2><ul>\n<li><a href=\"http://www.imooc.com/code/49\" target=\"_blank\" rel=\"noopener\">HTML代码练习</a>(第4周-第6周）</li>\n<li><a href=\"https://wangdoc.com/javascript/\" target=\"_blank\" rel=\"noopener\">JavaScript语言入门教程</a></li>\n<li><a href=\"http://www.imooc.com/learn/36\" target=\"_blank\" rel=\"noopener\">Js视频</a></li>\n</ul>\n<h2 id=\"进阶🏃\"><a href=\"#进阶🏃\" class=\"headerlink\" title=\"进阶🏃\"></a>进阶🏃</h2><ul>\n<li><a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"noopener\">ECMAScript 6 入门</a></li>\n<li><a href=\"https://www.imooc.com/learn/955\" target=\"_blank\" rel=\"noopener\">ES6快速入门</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/03/react.html\" target=\"_blank\" rel=\"noopener\">React入门教程</a></li>\n<li>使用React的网站：<ul>\n<li><a href=\"http://www.facebook.com/\" target=\"_blank\" rel=\"noopener\">Facebook</a></li>\n<li><a href=\"http://instagram.com/\" target=\"_blank\" rel=\"noopener\">Instagram</a></li>\n<li><a href=\"https://www.zhihu.com/\" target=\"_blank\" rel=\"noopener\">知乎</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"React🚕\"><a href=\"#React🚕\" class=\"headerlink\" title=\"React🚕\"></a>React🚕</h2><ul>\n<li><a href=\"https://juejin.im/post/59dcd87451882578c2084515\" target=\"_blank\" rel=\"noopener\">从React脚手架工具学习React项目的最佳实践</a></li>\n<li><a href=\"https://juejin.im/entry/5b3f3c82e51d45190905d3a2\" target=\"_blank\" rel=\"noopener\">组件库（了解）</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\" target=\"_blank\" rel=\"noopener\">React 技术栈系列教程</a></li>\n</ul>\n"},{"title":"每周记录📝（190316）","date":"2019-03-15T16:00:00.000Z","_content":"![学校的傍晚](https://wx1.sinaimg.cn/mw1024/6a49516fly1g14vxty5rbj21400u0e82.jpg)\n\n这一周将毕业设计的开头部分完成了链路打通，具体就是在前端埋点得到的数据能够在kafka中分topic消费。\n\n其实这之间走了很多弯路，自己反复查资料才发现一个正确的方法。现在才意识到做项目需要一个指导老师的重要性，同样企业需要技术的布道师也是这个道理。\n\n我的毕设是使用spark streaming进行网站流量的分析。其实对于毕设很尴尬的一点事，没有真实的业务数据，只能自己凭空制造。另外我觉得高校中的毕业设计，真的越来越水，就像是一个大一点的课程设计，自己独立完成的那种。\n\n这一周我首先想完成通过自己在前端埋点，收集到数据，并能够给后面的业务流程使用。我的前端使用react，埋点的数据收集打算用flume收集。最开始的思路是使用flume的HTTPSource直接收集来自前端POST请求中的数据，可是通过查阅文档发现，无法完成。因为HTTPSource接受的需要是flume的Event对象，前端直接发来的数据不符合要求。所以说前端的任务只要完成原始数据收集的工作就可以了，其他必要的转换由后端完成。\n\n还有一点就是，经别人提醒，如果说用flume直接收集网络上的数据还有安全的问题（见[V2ex帖子](https://www.v2ex.com/t/543592#reply4)）。所以有后端转发的必要。所以在这里我就有个疑惑，关于HTTPSource的使用场景到底是什么？\n\n进过反复的尝试，确定了方案是：前端埋点采集到的数据由后端接受，并发送log4j日志给flume，再由flume的interceptor进行过滤（分流），分成不同的topic给kafka的消费者使用，之后就可以给spark streaming使用啦。(解决方案[见文章](https://fangmiao97.github.io/2019/03/16/FluemToKafkaBaseOnDifferntTopic/))\n\n不过现在遗留下的问题就是，前端使用axios出现跨域访问的问题。这个问题下周开始解决。下周要完成的任务就是把前端的框架搭好，开始学习spark streaming深入一点的东西，然后找需求。目前的需求太单薄了，不怎么丰富。\n\n本周还做了点其他的事，总之效率没有那么高吧。这两天刷LeetCode也刷不起来，不知道为啥。所以这两天休息了一下，没刷。\n\n感觉自己有的时候总被一些东西打扰，自己的控制力不够。另外看书的速度也挺慢的。看了名人传记，感觉厉害的人为何有那么多精力呢？\n\n最近看到好玩的图，取名我的毕设，哈哈哈🤣\n![我的毕设](https://wx2.sinaimg.cn/mw1024/6a49516fly1g14w7kwjt8j20j60n4dks.jpg)\n\n","source":"_posts/weeklyReport190316.md","raw":"---\ntitle: 每周记录📝（190316）\ndate: 2019/3/16\ncategories:\n    - 每周记录\n---\n![学校的傍晚](https://wx1.sinaimg.cn/mw1024/6a49516fly1g14vxty5rbj21400u0e82.jpg)\n\n这一周将毕业设计的开头部分完成了链路打通，具体就是在前端埋点得到的数据能够在kafka中分topic消费。\n\n其实这之间走了很多弯路，自己反复查资料才发现一个正确的方法。现在才意识到做项目需要一个指导老师的重要性，同样企业需要技术的布道师也是这个道理。\n\n我的毕设是使用spark streaming进行网站流量的分析。其实对于毕设很尴尬的一点事，没有真实的业务数据，只能自己凭空制造。另外我觉得高校中的毕业设计，真的越来越水，就像是一个大一点的课程设计，自己独立完成的那种。\n\n这一周我首先想完成通过自己在前端埋点，收集到数据，并能够给后面的业务流程使用。我的前端使用react，埋点的数据收集打算用flume收集。最开始的思路是使用flume的HTTPSource直接收集来自前端POST请求中的数据，可是通过查阅文档发现，无法完成。因为HTTPSource接受的需要是flume的Event对象，前端直接发来的数据不符合要求。所以说前端的任务只要完成原始数据收集的工作就可以了，其他必要的转换由后端完成。\n\n还有一点就是，经别人提醒，如果说用flume直接收集网络上的数据还有安全的问题（见[V2ex帖子](https://www.v2ex.com/t/543592#reply4)）。所以有后端转发的必要。所以在这里我就有个疑惑，关于HTTPSource的使用场景到底是什么？\n\n进过反复的尝试，确定了方案是：前端埋点采集到的数据由后端接受，并发送log4j日志给flume，再由flume的interceptor进行过滤（分流），分成不同的topic给kafka的消费者使用，之后就可以给spark streaming使用啦。(解决方案[见文章](https://fangmiao97.github.io/2019/03/16/FluemToKafkaBaseOnDifferntTopic/))\n\n不过现在遗留下的问题就是，前端使用axios出现跨域访问的问题。这个问题下周开始解决。下周要完成的任务就是把前端的框架搭好，开始学习spark streaming深入一点的东西，然后找需求。目前的需求太单薄了，不怎么丰富。\n\n本周还做了点其他的事，总之效率没有那么高吧。这两天刷LeetCode也刷不起来，不知道为啥。所以这两天休息了一下，没刷。\n\n感觉自己有的时候总被一些东西打扰，自己的控制力不够。另外看书的速度也挺慢的。看了名人传记，感觉厉害的人为何有那么多精力呢？\n\n最近看到好玩的图，取名我的毕设，哈哈哈🤣\n![我的毕设](https://wx2.sinaimg.cn/mw1024/6a49516fly1g14w7kwjt8j20j60n4dks.jpg)\n\n","slug":"weeklyReport190316","published":1,"updated":"2019-03-17T07:46:54.739Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83nu000ilcqj3w95j6en","content":"<p><img src=\"https://wx1.sinaimg.cn/mw1024/6a49516fly1g14vxty5rbj21400u0e82.jpg\" alt=\"学校的傍晚\"></p>\n<p>这一周将毕业设计的开头部分完成了链路打通，具体就是在前端埋点得到的数据能够在kafka中分topic消费。</p>\n<p>其实这之间走了很多弯路，自己反复查资料才发现一个正确的方法。现在才意识到做项目需要一个指导老师的重要性，同样企业需要技术的布道师也是这个道理。</p>\n<p>我的毕设是使用spark streaming进行网站流量的分析。其实对于毕设很尴尬的一点事，没有真实的业务数据，只能自己凭空制造。另外我觉得高校中的毕业设计，真的越来越水，就像是一个大一点的课程设计，自己独立完成的那种。</p>\n<p>这一周我首先想完成通过自己在前端埋点，收集到数据，并能够给后面的业务流程使用。我的前端使用react，埋点的数据收集打算用flume收集。最开始的思路是使用flume的HTTPSource直接收集来自前端POST请求中的数据，可是通过查阅文档发现，无法完成。因为HTTPSource接受的需要是flume的Event对象，前端直接发来的数据不符合要求。所以说前端的任务只要完成原始数据收集的工作就可以了，其他必要的转换由后端完成。</p>\n<p>还有一点就是，经别人提醒，如果说用flume直接收集网络上的数据还有安全的问题（见<a href=\"https://www.v2ex.com/t/543592#reply4\" target=\"_blank\" rel=\"noopener\">V2ex帖子</a>）。所以有后端转发的必要。所以在这里我就有个疑惑，关于HTTPSource的使用场景到底是什么？</p>\n<p>进过反复的尝试，确定了方案是：前端埋点采集到的数据由后端接受，并发送log4j日志给flume，再由flume的interceptor进行过滤（分流），分成不同的topic给kafka的消费者使用，之后就可以给spark streaming使用啦。(解决方案<a href=\"https://fangmiao97.github.io/2019/03/16/FluemToKafkaBaseOnDifferntTopic/\" target=\"_blank\" rel=\"noopener\">见文章</a>)</p>\n<p>不过现在遗留下的问题就是，前端使用axios出现跨域访问的问题。这个问题下周开始解决。下周要完成的任务就是把前端的框架搭好，开始学习spark streaming深入一点的东西，然后找需求。目前的需求太单薄了，不怎么丰富。</p>\n<p>本周还做了点其他的事，总之效率没有那么高吧。这两天刷LeetCode也刷不起来，不知道为啥。所以这两天休息了一下，没刷。</p>\n<p>感觉自己有的时候总被一些东西打扰，自己的控制力不够。另外看书的速度也挺慢的。看了名人传记，感觉厉害的人为何有那么多精力呢？</p>\n<p>最近看到好玩的图，取名我的毕设，哈哈哈🤣<br><img src=\"https://wx2.sinaimg.cn/mw1024/6a49516fly1g14w7kwjt8j20j60n4dks.jpg\" alt=\"我的毕设\"></p>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<p><img src=\"https://wx1.sinaimg.cn/mw1024/6a49516fly1g14vxty5rbj21400u0e82.jpg\" alt=\"学校的傍晚\"></p>\n<p>这一周将毕业设计的开头部分完成了链路打通，具体就是在前端埋点得到的数据能够在kafka中分topic消费。</p>\n<p>其实这之间走了很多弯路，自己反复查资料才发现一个正确的方法。现在才意识到做项目需要一个指导老师的重要性，同样企业需要技术的布道师也是这个道理。</p>\n<p>我的毕设是使用spark streaming进行网站流量的分析。其实对于毕设很尴尬的一点事，没有真实的业务数据，只能自己凭空制造。另外我觉得高校中的毕业设计，真的越来越水，就像是一个大一点的课程设计，自己独立完成的那种。</p>\n<p>这一周我首先想完成通过自己在前端埋点，收集到数据，并能够给后面的业务流程使用。我的前端使用react，埋点的数据收集打算用flume收集。最开始的思路是使用flume的HTTPSource直接收集来自前端POST请求中的数据，可是通过查阅文档发现，无法完成。因为HTTPSource接受的需要是flume的Event对象，前端直接发来的数据不符合要求。所以说前端的任务只要完成原始数据收集的工作就可以了，其他必要的转换由后端完成。</p>\n<p>还有一点就是，经别人提醒，如果说用flume直接收集网络上的数据还有安全的问题（见<a href=\"https://www.v2ex.com/t/543592#reply4\" target=\"_blank\" rel=\"noopener\">V2ex帖子</a>）。所以有后端转发的必要。所以在这里我就有个疑惑，关于HTTPSource的使用场景到底是什么？</p>\n<p>进过反复的尝试，确定了方案是：前端埋点采集到的数据由后端接受，并发送log4j日志给flume，再由flume的interceptor进行过滤（分流），分成不同的topic给kafka的消费者使用，之后就可以给spark streaming使用啦。(解决方案<a href=\"https://fangmiao97.github.io/2019/03/16/FluemToKafkaBaseOnDifferntTopic/\" target=\"_blank\" rel=\"noopener\">见文章</a>)</p>\n<p>不过现在遗留下的问题就是，前端使用axios出现跨域访问的问题。这个问题下周开始解决。下周要完成的任务就是把前端的框架搭好，开始学习spark streaming深入一点的东西，然后找需求。目前的需求太单薄了，不怎么丰富。</p>\n<p>本周还做了点其他的事，总之效率没有那么高吧。这两天刷LeetCode也刷不起来，不知道为啥。所以这两天休息了一下，没刷。</p>\n<p>感觉自己有的时候总被一些东西打扰，自己的控制力不够。另外看书的速度也挺慢的。看了名人传记，感觉厉害的人为何有那么多精力呢？</p>\n<p>最近看到好玩的图，取名我的毕设，哈哈哈🤣<br><img src=\"https://wx2.sinaimg.cn/mw1024/6a49516fly1g14w7kwjt8j20j60n4dks.jpg\" alt=\"我的毕设\"></p>\n"},{"title":"Minions初始化手册✋","date":"2019-03-26T16:00:00.000Z","_content":"* kill所有进程\n* 启动两个flume\n\t* 对接Python产生的伪日志\n\t* 对接前端埋点的数据\n\n```\n//第一个在ZK Kafka启动后启动\nflume-ng agent \\\n--name exec-memory-kafka \\\n--conf $FLUME_HOME/conf \\\n--conf-file /home/hadoop/data/project/streaming_project2.conf \\\n-Dflume.root.logger=INFO,console\n\nflume-ng agent \\\n--name agent1 \\\n--conf $FLUME_HOME/conf \\\n--conf-file $FLUME_HOME/conf/streaming2.conf \\\n-Dflume.root.logger=INFO,console\n```\n\n* 启动zooKeeper\n\n`zookeeper>bin ./zkServer.sh start`\n\n* 启动Kafka（后台）\n\n`kafka> bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties`\n\n* 启动Hadoop\n\t* DataNode\n\t* SecondaryNameNode\n\t* NameNode \n\n```\nhadoop/sbin> ./start-dfs.sh\n\n//单独启动命令：\n./hadoop-daemon.sh start secondarynamenode\n```\n\n* 启动HBase\n\t* HMaster\n\t* HRegionServer \n\n`bin> ./start-hbase.sh`\n\n```\n./hbase shell\n\nlist\nscan 'table_name'\ndesc 'table_name'\n```\n\n* 启动spark作业\n\t* MyStreamingApp : 统计访问量\n\t* KafKaStreamingApp : 处理前端埋点数据（hello_ladygaga_topic)\n\n* 启动Springboot后端和react前端","source":"_posts/minionsUsage.md","raw":"---\ntitle: Minions初始化手册✋\ndate: 2019/03/27\n---\n* kill所有进程\n* 启动两个flume\n\t* 对接Python产生的伪日志\n\t* 对接前端埋点的数据\n\n```\n//第一个在ZK Kafka启动后启动\nflume-ng agent \\\n--name exec-memory-kafka \\\n--conf $FLUME_HOME/conf \\\n--conf-file /home/hadoop/data/project/streaming_project2.conf \\\n-Dflume.root.logger=INFO,console\n\nflume-ng agent \\\n--name agent1 \\\n--conf $FLUME_HOME/conf \\\n--conf-file $FLUME_HOME/conf/streaming2.conf \\\n-Dflume.root.logger=INFO,console\n```\n\n* 启动zooKeeper\n\n`zookeeper>bin ./zkServer.sh start`\n\n* 启动Kafka（后台）\n\n`kafka> bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties`\n\n* 启动Hadoop\n\t* DataNode\n\t* SecondaryNameNode\n\t* NameNode \n\n```\nhadoop/sbin> ./start-dfs.sh\n\n//单独启动命令：\n./hadoop-daemon.sh start secondarynamenode\n```\n\n* 启动HBase\n\t* HMaster\n\t* HRegionServer \n\n`bin> ./start-hbase.sh`\n\n```\n./hbase shell\n\nlist\nscan 'table_name'\ndesc 'table_name'\n```\n\n* 启动spark作业\n\t* MyStreamingApp : 统计访问量\n\t* KafKaStreamingApp : 处理前端埋点数据（hello_ladygaga_topic)\n\n* 启动Springboot后端和react前端","slug":"minionsUsage","published":1,"updated":"2019-03-27T10:57:25.662Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83nx000klcqj7eah5oae","content":"<ul>\n<li>kill所有进程</li>\n<li>启动两个flume<ul>\n<li>对接Python产生的伪日志</li>\n<li>对接前端埋点的数据</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//第一个在ZK Kafka启动后启动</span><br><span class=\"line\">flume-ng agent \\</span><br><span class=\"line\">--name exec-memory-kafka \\</span><br><span class=\"line\">--conf $FLUME_HOME/conf \\</span><br><span class=\"line\">--conf-file /home/hadoop/data/project/streaming_project2.conf \\</span><br><span class=\"line\">-Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent \\</span><br><span class=\"line\">--name agent1 \\</span><br><span class=\"line\">--conf $FLUME_HOME/conf \\</span><br><span class=\"line\">--conf-file $FLUME_HOME/conf/streaming2.conf \\</span><br><span class=\"line\">-Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动zooKeeper</li>\n</ul>\n<p><code>zookeeper&gt;bin ./zkServer.sh start</code></p>\n<ul>\n<li>启动Kafka（后台）</li>\n</ul>\n<p><code>kafka&gt; bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties</code></p>\n<ul>\n<li>启动Hadoop<ul>\n<li>DataNode</li>\n<li>SecondaryNameNode</li>\n<li>NameNode </li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hadoop/sbin&gt; ./start-dfs.sh</span><br><span class=\"line\"></span><br><span class=\"line\">//单独启动命令：</span><br><span class=\"line\">./hadoop-daemon.sh start secondarynamenode</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动HBase<ul>\n<li>HMaster</li>\n<li>HRegionServer </li>\n</ul>\n</li>\n</ul>\n<p><code>bin&gt; ./start-hbase.sh</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./hbase shell</span><br><span class=\"line\"></span><br><span class=\"line\">list</span><br><span class=\"line\">scan &apos;table_name&apos;</span><br><span class=\"line\">desc &apos;table_name&apos;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>启动spark作业</p>\n<ul>\n<li>MyStreamingApp : 统计访问量</li>\n<li>KafKaStreamingApp : 处理前端埋点数据（hello_ladygaga_topic)</li>\n</ul>\n</li>\n<li><p>启动Springboot后端和react前端</p>\n</li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<ul>\n<li>kill所有进程</li>\n<li>启动两个flume<ul>\n<li>对接Python产生的伪日志</li>\n<li>对接前端埋点的数据</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//第一个在ZK Kafka启动后启动</span><br><span class=\"line\">flume-ng agent \\</span><br><span class=\"line\">--name exec-memory-kafka \\</span><br><span class=\"line\">--conf $FLUME_HOME/conf \\</span><br><span class=\"line\">--conf-file /home/hadoop/data/project/streaming_project2.conf \\</span><br><span class=\"line\">-Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent \\</span><br><span class=\"line\">--name agent1 \\</span><br><span class=\"line\">--conf $FLUME_HOME/conf \\</span><br><span class=\"line\">--conf-file $FLUME_HOME/conf/streaming2.conf \\</span><br><span class=\"line\">-Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动zooKeeper</li>\n</ul>\n<p><code>zookeeper&gt;bin ./zkServer.sh start</code></p>\n<ul>\n<li>启动Kafka（后台）</li>\n</ul>\n<p><code>kafka&gt; bin/kafka-server-start.sh -daemon $KAFKA_HOME/config/server.properties</code></p>\n<ul>\n<li>启动Hadoop<ul>\n<li>DataNode</li>\n<li>SecondaryNameNode</li>\n<li>NameNode </li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hadoop/sbin&gt; ./start-dfs.sh</span><br><span class=\"line\"></span><br><span class=\"line\">//单独启动命令：</span><br><span class=\"line\">./hadoop-daemon.sh start secondarynamenode</span><br></pre></td></tr></table></figure>\n<ul>\n<li>启动HBase<ul>\n<li>HMaster</li>\n<li>HRegionServer </li>\n</ul>\n</li>\n</ul>\n<p><code>bin&gt; ./start-hbase.sh</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./hbase shell</span><br><span class=\"line\"></span><br><span class=\"line\">list</span><br><span class=\"line\">scan &apos;table_name&apos;</span><br><span class=\"line\">desc &apos;table_name&apos;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>启动spark作业</p>\n<ul>\n<li>MyStreamingApp : 统计访问量</li>\n<li>KafKaStreamingApp : 处理前端埋点数据（hello_ladygaga_topic)</li>\n</ul>\n</li>\n<li><p>启动Springboot后端和react前端</p>\n</li>\n</ul>\n"},{"title":"微信小程序开发🚀","date":"2019-03-13T16:00:00.000Z","_content":"\n\n## 布局样式📱\n*\t[入门教程视频](https://www.imooc.com/learn/974)\n*  [基础代码教程](http://www.imooc.com/code/49)\n*  相关实用网站\n\t*  [菜鸟教程](http://www.runoob.com/css/css-tutorial.html)\n\t*  [WXML与WXSS](https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#wxml-%E6%A8%A1%E6%9D%BF)\n\t*  [WXSS主要注意尺寸单位](https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html)\n\t*  [小程序的基本组件](https://developers.weixin.qq.com/miniprogram/dev/component/)\n\n## 逻辑🗯\n* [PWA](https://developers.weixin.qq.com/community/develop/article/doc/000aa057ca0a88dcd938b4d6656813)(了解）\n* [关于HTML5/小程序的产生](https://www.v2ex.com/t/427255)(了解）\n* [JS逻辑交互](https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#js-%E4%BA%A4%E4%BA%92%E9%80%BB%E8%BE%91)\n* 相关实用网站\n\t* [小程序的API](https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/framework.html#api)\n\t* [JavaScript](http://www.runoob.com/js/js-tutorial.html)\n\t* [JSON教程](http://www.runoob.com/json/json-tutorial.html)\n\n## 其他实用网站🕸\n*\t[官方社区](https://developers.weixin.qq.com/):有的坑可能别人已经踩过，可以搜索一下\n* [知晓程序](https://minapp.com/miniapp/)：可以看看别人产品的想法和思路\n* [WePY](https://tencent.github.io/wepy/)：开发小程序的一个框架。建议看看就好，还是以原生开发为主。等原生上手后再看看框架。\n* [工大思政课](https://github.com/Shincey/HFUTSZK):无网络交互，可以独立开发完成。\n* [AI小部落](https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram)：js逻辑中有网络交互，可以做参考。\n* 各种css样式配置web工具\n\t* [box、卡片的阴影效果](https://www.html.cn/tool/css3Preview/Box-Shadow.html)\n\t* ......\n\n## 建议🍻\n* 先学习基础**HTML/CSS/JavaScript**，不用特别抓细节，但是要知晓常见用法\n* 理清三个方面：\n\t* 如何布局、添加样式\n\t* 逻辑层与 ui 层如何交互，或者说如何用代码操控 ui 组件\n\t* 如何处理用户的交互动作\n* 先从简单的功能开始开发，如，点击按钮显示图片文本。再逐渐复杂逻辑\n* 小程序推荐用原生开发，先不要用框架\n* 看官方文档，也要结合搜索引擎。因为微信的官方文档，有坑\n* 每天新增一行代码都是进步😃加油！\n* 逐渐理解[生命周期](https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F)\n","source":"_posts/微信小程序学习意见.md","raw":"---\ntitle: 微信小程序开发🚀\ndate: 2019/3/14\ntags:\n- 开发相关\n---\n\n\n## 布局样式📱\n*\t[入门教程视频](https://www.imooc.com/learn/974)\n*  [基础代码教程](http://www.imooc.com/code/49)\n*  相关实用网站\n\t*  [菜鸟教程](http://www.runoob.com/css/css-tutorial.html)\n\t*  [WXML与WXSS](https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#wxml-%E6%A8%A1%E6%9D%BF)\n\t*  [WXSS主要注意尺寸单位](https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html)\n\t*  [小程序的基本组件](https://developers.weixin.qq.com/miniprogram/dev/component/)\n\n## 逻辑🗯\n* [PWA](https://developers.weixin.qq.com/community/develop/article/doc/000aa057ca0a88dcd938b4d6656813)(了解）\n* [关于HTML5/小程序的产生](https://www.v2ex.com/t/427255)(了解）\n* [JS逻辑交互](https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#js-%E4%BA%A4%E4%BA%92%E9%80%BB%E8%BE%91)\n* 相关实用网站\n\t* [小程序的API](https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/framework.html#api)\n\t* [JavaScript](http://www.runoob.com/js/js-tutorial.html)\n\t* [JSON教程](http://www.runoob.com/json/json-tutorial.html)\n\n## 其他实用网站🕸\n*\t[官方社区](https://developers.weixin.qq.com/):有的坑可能别人已经踩过，可以搜索一下\n* [知晓程序](https://minapp.com/miniapp/)：可以看看别人产品的想法和思路\n* [WePY](https://tencent.github.io/wepy/)：开发小程序的一个框架。建议看看就好，还是以原生开发为主。等原生上手后再看看框架。\n* [工大思政课](https://github.com/Shincey/HFUTSZK):无网络交互，可以独立开发完成。\n* [AI小部落](https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram)：js逻辑中有网络交互，可以做参考。\n* 各种css样式配置web工具\n\t* [box、卡片的阴影效果](https://www.html.cn/tool/css3Preview/Box-Shadow.html)\n\t* ......\n\n## 建议🍻\n* 先学习基础**HTML/CSS/JavaScript**，不用特别抓细节，但是要知晓常见用法\n* 理清三个方面：\n\t* 如何布局、添加样式\n\t* 逻辑层与 ui 层如何交互，或者说如何用代码操控 ui 组件\n\t* 如何处理用户的交互动作\n* 先从简单的功能开始开发，如，点击按钮显示图片文本。再逐渐复杂逻辑\n* 小程序推荐用原生开发，先不要用框架\n* 看官方文档，也要结合搜索引擎。因为微信的官方文档，有坑\n* 每天新增一行代码都是进步😃加油！\n* 逐渐理解[生命周期](https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F)\n","slug":"微信小程序学习意见","published":1,"updated":"2019-03-17T07:46:54.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83o2000olcqj3al5ubrr","content":"<h2 id=\"布局样式📱\"><a href=\"#布局样式📱\" class=\"headerlink\" title=\"布局样式📱\"></a>布局样式📱</h2><ul>\n<li><a href=\"https://www.imooc.com/learn/974\" target=\"_blank\" rel=\"noopener\">入门教程视频</a></li>\n<li><a href=\"http://www.imooc.com/code/49\" target=\"_blank\" rel=\"noopener\">基础代码教程</a></li>\n<li>相关实用网站<ul>\n<li><a href=\"http://www.runoob.com/css/css-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a></li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#wxml-%E6%A8%A1%E6%9D%BF\" target=\"_blank\" rel=\"noopener\">WXML与WXSS</a></li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html\" target=\"_blank\" rel=\"noopener\">WXSS主要注意尺寸单位</a></li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/\" target=\"_blank\" rel=\"noopener\">小程序的基本组件</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"逻辑🗯\"><a href=\"#逻辑🗯\" class=\"headerlink\" title=\"逻辑🗯\"></a>逻辑🗯</h2><ul>\n<li><a href=\"https://developers.weixin.qq.com/community/develop/article/doc/000aa057ca0a88dcd938b4d6656813\" target=\"_blank\" rel=\"noopener\">PWA</a>(了解）</li>\n<li><a href=\"https://www.v2ex.com/t/427255\" target=\"_blank\" rel=\"noopener\">关于HTML5/小程序的产生</a>(了解）</li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#js-%E4%BA%A4%E4%BA%92%E9%80%BB%E8%BE%91\" target=\"_blank\" rel=\"noopener\">JS逻辑交互</a></li>\n<li>相关实用网站<ul>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/framework.html#api\" target=\"_blank\" rel=\"noopener\">小程序的API</a></li>\n<li><a href=\"http://www.runoob.com/js/js-tutorial.html\" target=\"_blank\" rel=\"noopener\">JavaScript</a></li>\n<li><a href=\"http://www.runoob.com/json/json-tutorial.html\" target=\"_blank\" rel=\"noopener\">JSON教程</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他实用网站🕸\"><a href=\"#其他实用网站🕸\" class=\"headerlink\" title=\"其他实用网站🕸\"></a>其他实用网站🕸</h2><ul>\n<li><a href=\"https://developers.weixin.qq.com/\" target=\"_blank\" rel=\"noopener\">官方社区</a>:有的坑可能别人已经踩过，可以搜索一下</li>\n<li><a href=\"https://minapp.com/miniapp/\" target=\"_blank\" rel=\"noopener\">知晓程序</a>：可以看看别人产品的想法和思路</li>\n<li><a href=\"https://tencent.github.io/wepy/\" target=\"_blank\" rel=\"noopener\">WePY</a>：开发小程序的一个框架。建议看看就好，还是以原生开发为主。等原生上手后再看看框架。</li>\n<li><a href=\"https://github.com/Shincey/HFUTSZK\" target=\"_blank\" rel=\"noopener\">工大思政课</a>:无网络交互，可以独立开发完成。</li>\n<li><a href=\"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram\" target=\"_blank\" rel=\"noopener\">AI小部落</a>：js逻辑中有网络交互，可以做参考。</li>\n<li>各种css样式配置web工具<ul>\n<li><a href=\"https://www.html.cn/tool/css3Preview/Box-Shadow.html\" target=\"_blank\" rel=\"noopener\">box、卡片的阴影效果</a></li>\n<li>……</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"建议🍻\"><a href=\"#建议🍻\" class=\"headerlink\" title=\"建议🍻\"></a>建议🍻</h2><ul>\n<li>先学习基础<strong>HTML/CSS/JavaScript</strong>，不用特别抓细节，但是要知晓常见用法</li>\n<li>理清三个方面：<ul>\n<li>如何布局、添加样式</li>\n<li>逻辑层与 ui 层如何交互，或者说如何用代码操控 ui 组件</li>\n<li>如何处理用户的交互动作</li>\n</ul>\n</li>\n<li>先从简单的功能开始开发，如，点击按钮显示图片文本。再逐渐复杂逻辑</li>\n<li>小程序推荐用原生开发，先不要用框架</li>\n<li>看官方文档，也要结合搜索引擎。因为微信的官方文档，有坑</li>\n<li>每天新增一行代码都是进步😃加油！</li>\n<li>逐渐理解<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\" target=\"_blank\" rel=\"noopener\">生命周期</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"布局样式📱\"><a href=\"#布局样式📱\" class=\"headerlink\" title=\"布局样式📱\"></a>布局样式📱</h2><ul>\n<li><a href=\"https://www.imooc.com/learn/974\" target=\"_blank\" rel=\"noopener\">入门教程视频</a></li>\n<li><a href=\"http://www.imooc.com/code/49\" target=\"_blank\" rel=\"noopener\">基础代码教程</a></li>\n<li>相关实用网站<ul>\n<li><a href=\"http://www.runoob.com/css/css-tutorial.html\" target=\"_blank\" rel=\"noopener\">菜鸟教程</a></li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#wxml-%E6%A8%A1%E6%9D%BF\" target=\"_blank\" rel=\"noopener\">WXML与WXSS</a></li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html\" target=\"_blank\" rel=\"noopener\">WXSS主要注意尺寸单位</a></li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/component/\" target=\"_blank\" rel=\"noopener\">小程序的基本组件</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"逻辑🗯\"><a href=\"#逻辑🗯\" class=\"headerlink\" title=\"逻辑🗯\"></a>逻辑🗯</h2><ul>\n<li><a href=\"https://developers.weixin.qq.com/community/develop/article/doc/000aa057ca0a88dcd938b4d6656813\" target=\"_blank\" rel=\"noopener\">PWA</a>(了解）</li>\n<li><a href=\"https://www.v2ex.com/t/427255\" target=\"_blank\" rel=\"noopener\">关于HTML5/小程序的产生</a>(了解）</li>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/file.html#js-%E4%BA%A4%E4%BA%92%E9%80%BB%E8%BE%91\" target=\"_blank\" rel=\"noopener\">JS逻辑交互</a></li>\n<li>相关实用网站<ul>\n<li><a href=\"https://developers.weixin.qq.com/miniprogram/dev/quickstart/basic/framework.html#api\" target=\"_blank\" rel=\"noopener\">小程序的API</a></li>\n<li><a href=\"http://www.runoob.com/js/js-tutorial.html\" target=\"_blank\" rel=\"noopener\">JavaScript</a></li>\n<li><a href=\"http://www.runoob.com/json/json-tutorial.html\" target=\"_blank\" rel=\"noopener\">JSON教程</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"其他实用网站🕸\"><a href=\"#其他实用网站🕸\" class=\"headerlink\" title=\"其他实用网站🕸\"></a>其他实用网站🕸</h2><ul>\n<li><a href=\"https://developers.weixin.qq.com/\" target=\"_blank\" rel=\"noopener\">官方社区</a>:有的坑可能别人已经踩过，可以搜索一下</li>\n<li><a href=\"https://minapp.com/miniapp/\" target=\"_blank\" rel=\"noopener\">知晓程序</a>：可以看看别人产品的想法和思路</li>\n<li><a href=\"https://tencent.github.io/wepy/\" target=\"_blank\" rel=\"noopener\">WePY</a>：开发小程序的一个框架。建议看看就好，还是以原生开发为主。等原生上手后再看看框架。</li>\n<li><a href=\"https://github.com/Shincey/HFUTSZK\" target=\"_blank\" rel=\"noopener\">工大思政课</a>:无网络交互，可以独立开发完成。</li>\n<li><a href=\"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram\" target=\"_blank\" rel=\"noopener\">AI小部落</a>：js逻辑中有网络交互，可以做参考。</li>\n<li>各种css样式配置web工具<ul>\n<li><a href=\"https://www.html.cn/tool/css3Preview/Box-Shadow.html\" target=\"_blank\" rel=\"noopener\">box、卡片的阴影效果</a></li>\n<li>……</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"建议🍻\"><a href=\"#建议🍻\" class=\"headerlink\" title=\"建议🍻\"></a>建议🍻</h2><ul>\n<li>先学习基础<strong>HTML/CSS/JavaScript</strong>，不用特别抓细节，但是要知晓常见用法</li>\n<li>理清三个方面：<ul>\n<li>如何布局、添加样式</li>\n<li>逻辑层与 ui 层如何交互，或者说如何用代码操控 ui 组件</li>\n<li>如何处理用户的交互动作</li>\n</ul>\n</li>\n<li>先从简单的功能开始开发，如，点击按钮显示图片文本。再逐渐复杂逻辑</li>\n<li>小程序推荐用原生开发，先不要用框架</li>\n<li>看官方文档，也要结合搜索引擎。因为微信的官方文档，有坑</li>\n<li>每天新增一行代码都是进步😃加油！</li>\n<li>逐渐理解<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/page.html#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F\" target=\"_blank\" rel=\"noopener\">生命周期</a></li>\n</ul>\n"},{"title":"每周记录📝（190323）","date":"2019-03-22T16:00:00.000Z","_content":"![图书馆](https://wxt.sinaimg.cn/mw1024/6a49516fly1g1crb20idzj22c02c0b2a.jpg?tags=%5B%5D)\n\n雨后的图书馆。\n\n本周将毕业设计的前端后端，kafka与spark streaming进行了打通。前端页面也可展示HBase中的数据。\n\n关于ant-d Pro，我感觉肯定是有很多坑的。慢慢踩。\n\n对于毕设后续，下一周需要将模拟打点的页面加上，并把之前例子中的spark应用部署好，能够实现组件的动态渲染。\n\n本周首先解决了CORS问题，其实在后端加上标签即可。我的后端其实有一两点，首先是数据可视化的作用，另一个是模拟前端打点的应用。没有办法，只能这样用，模拟真实情况的服务。\n\n另外注意到Nginx，学习到其有两个作用：反向代理+负载均衡，以后用到在深入吧。\n\n对于HBase的scan操作，还需要深入学习一下。\n\n![](https://wx2.sinaimg.cn/mw1024/6a49516fly1g1cr9q61ixj21hc0u0n20.jpg)\n\n目前的可视化界面，没有logo，在今日数据概览中需要加一个显示当前时间的组件。这个Antd Pro的Pie组件真的很迷。\n\n历史数据查询需要增加日期选择控件。对于历史数据，我准备存在MySQL中，这里就要思考每日定时dump的问题。\n\n对于前端数据埋点的信息，先显示出来好了。\n\n刷LeetCode去了。","source":"_posts/weeklyReport190323.md","raw":"---\ntitle: 每周记录📝（190323）\ndate: 2019/3/23\ncategories:\n    - 每周记录\n---\n![图书馆](https://wxt.sinaimg.cn/mw1024/6a49516fly1g1crb20idzj22c02c0b2a.jpg?tags=%5B%5D)\n\n雨后的图书馆。\n\n本周将毕业设计的前端后端，kafka与spark streaming进行了打通。前端页面也可展示HBase中的数据。\n\n关于ant-d Pro，我感觉肯定是有很多坑的。慢慢踩。\n\n对于毕设后续，下一周需要将模拟打点的页面加上，并把之前例子中的spark应用部署好，能够实现组件的动态渲染。\n\n本周首先解决了CORS问题，其实在后端加上标签即可。我的后端其实有一两点，首先是数据可视化的作用，另一个是模拟前端打点的应用。没有办法，只能这样用，模拟真实情况的服务。\n\n另外注意到Nginx，学习到其有两个作用：反向代理+负载均衡，以后用到在深入吧。\n\n对于HBase的scan操作，还需要深入学习一下。\n\n![](https://wx2.sinaimg.cn/mw1024/6a49516fly1g1cr9q61ixj21hc0u0n20.jpg)\n\n目前的可视化界面，没有logo，在今日数据概览中需要加一个显示当前时间的组件。这个Antd Pro的Pie组件真的很迷。\n\n历史数据查询需要增加日期选择控件。对于历史数据，我准备存在MySQL中，这里就要思考每日定时dump的问题。\n\n对于前端数据埋点的信息，先显示出来好了。\n\n刷LeetCode去了。","slug":"weeklyReport190323","published":1,"updated":"2019-03-23T08:13:59.331Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83o4000rlcqjpoufzpsw","content":"<p><img src=\"https://wxt.sinaimg.cn/mw1024/6a49516fly1g1crb20idzj22c02c0b2a.jpg?tags=%5B%5D\" alt=\"图书馆\"></p>\n<p>雨后的图书馆。</p>\n<p>本周将毕业设计的前端后端，kafka与spark streaming进行了打通。前端页面也可展示HBase中的数据。</p>\n<p>关于ant-d Pro，我感觉肯定是有很多坑的。慢慢踩。</p>\n<p>对于毕设后续，下一周需要将模拟打点的页面加上，并把之前例子中的spark应用部署好，能够实现组件的动态渲染。</p>\n<p>本周首先解决了CORS问题，其实在后端加上标签即可。我的后端其实有一两点，首先是数据可视化的作用，另一个是模拟前端打点的应用。没有办法，只能这样用，模拟真实情况的服务。</p>\n<p>另外注意到Nginx，学习到其有两个作用：反向代理+负载均衡，以后用到在深入吧。</p>\n<p>对于HBase的scan操作，还需要深入学习一下。</p>\n<p><img src=\"https://wx2.sinaimg.cn/mw1024/6a49516fly1g1cr9q61ixj21hc0u0n20.jpg\" alt></p>\n<p>目前的可视化界面，没有logo，在今日数据概览中需要加一个显示当前时间的组件。这个Antd Pro的Pie组件真的很迷。</p>\n<p>历史数据查询需要增加日期选择控件。对于历史数据，我准备存在MySQL中，这里就要思考每日定时dump的问题。</p>\n<p>对于前端数据埋点的信息，先显示出来好了。</p>\n<p>刷LeetCode去了。</p>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<p><img src=\"https://wxt.sinaimg.cn/mw1024/6a49516fly1g1crb20idzj22c02c0b2a.jpg?tags=%5B%5D\" alt=\"图书馆\"></p>\n<p>雨后的图书馆。</p>\n<p>本周将毕业设计的前端后端，kafka与spark streaming进行了打通。前端页面也可展示HBase中的数据。</p>\n<p>关于ant-d Pro，我感觉肯定是有很多坑的。慢慢踩。</p>\n<p>对于毕设后续，下一周需要将模拟打点的页面加上，并把之前例子中的spark应用部署好，能够实现组件的动态渲染。</p>\n<p>本周首先解决了CORS问题，其实在后端加上标签即可。我的后端其实有一两点，首先是数据可视化的作用，另一个是模拟前端打点的应用。没有办法，只能这样用，模拟真实情况的服务。</p>\n<p>另外注意到Nginx，学习到其有两个作用：反向代理+负载均衡，以后用到在深入吧。</p>\n<p>对于HBase的scan操作，还需要深入学习一下。</p>\n<p><img src=\"https://wx2.sinaimg.cn/mw1024/6a49516fly1g1cr9q61ixj21hc0u0n20.jpg\" alt></p>\n<p>目前的可视化界面，没有logo，在今日数据概览中需要加一个显示当前时间的组件。这个Antd Pro的Pie组件真的很迷。</p>\n<p>历史数据查询需要增加日期选择控件。对于历史数据，我准备存在MySQL中，这里就要思考每日定时dump的问题。</p>\n<p>对于前端数据埋点的信息，先显示出来好了。</p>\n<p>刷LeetCode去了。</p>\n"},{"title":"Websites Safari","date":"2019-03-17T16:00:00.000Z","_content":"## 脚手架\n* [antd脚手架市场](http://scaffold.ant.design/#/)\n\n## 图解IT\n* [Scaling webapps for newbs & non-techies 大型网络扩展](https://arcentry.com/blog/scaling-webapps-for-newbs-and-non-techies/)\n\n## React Framework\n* [Next.js](https://nextjs.org/)","source":"_posts/websitesafari.md","raw":"---\ntitle: Websites Safari\ndate: 2019/3/18\n---\n## 脚手架\n* [antd脚手架市场](http://scaffold.ant.design/#/)\n\n## 图解IT\n* [Scaling webapps for newbs & non-techies 大型网络扩展](https://arcentry.com/blog/scaling-webapps-for-newbs-and-non-techies/)\n\n## React Framework\n* [Next.js](https://nextjs.org/)","slug":"websitesafari","published":1,"updated":"2019-03-23T10:59:04.231Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83o8000wlcqjagaeujsc","content":"<h2 id=\"脚手架\"><a href=\"#脚手架\" class=\"headerlink\" title=\"脚手架\"></a>脚手架</h2><ul>\n<li><a href=\"http://scaffold.ant.design/#/\" target=\"_blank\" rel=\"noopener\">antd脚手架市场</a></li>\n</ul>\n<h2 id=\"图解IT\"><a href=\"#图解IT\" class=\"headerlink\" title=\"图解IT\"></a>图解IT</h2><ul>\n<li><a href=\"https://arcentry.com/blog/scaling-webapps-for-newbs-and-non-techies/\" target=\"_blank\" rel=\"noopener\">Scaling webapps for newbs &amp; non-techies 大型网络扩展</a></li>\n</ul>\n<h2 id=\"React-Framework\"><a href=\"#React-Framework\" class=\"headerlink\" title=\"React Framework\"></a>React Framework</h2><ul>\n<li><a href=\"https://nextjs.org/\" target=\"_blank\" rel=\"noopener\">Next.js</a></li>\n</ul>\n","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<h2 id=\"脚手架\"><a href=\"#脚手架\" class=\"headerlink\" title=\"脚手架\"></a>脚手架</h2><ul>\n<li><a href=\"http://scaffold.ant.design/#/\" target=\"_blank\" rel=\"noopener\">antd脚手架市场</a></li>\n</ul>\n<h2 id=\"图解IT\"><a href=\"#图解IT\" class=\"headerlink\" title=\"图解IT\"></a>图解IT</h2><ul>\n<li><a href=\"https://arcentry.com/blog/scaling-webapps-for-newbs-and-non-techies/\" target=\"_blank\" rel=\"noopener\">Scaling webapps for newbs &amp; non-techies 大型网络扩展</a></li>\n</ul>\n<h2 id=\"React-Framework\"><a href=\"#React-Framework\" class=\"headerlink\" title=\"React Framework\"></a>React Framework</h2><ul>\n<li><a href=\"https://nextjs.org/\" target=\"_blank\" rel=\"noopener\">Next.js</a></li>\n</ul>\n"},{"title":"LeetCode刷题总结（持续更新）","date":"2019-03-14T16:00:00.000Z","updated":"2019-03-16T16:00:00.000Z","_content":"我的答案仓库地址：[MyLeetCode](https://github.com/fangmiao97/MyLeetCode)\n## Tree与迭代、动态规划\n* [Maximum Binary Tree](https://leetcode.com/problems/maximum-binary-tree/)\n    * 思路：将创建最大二叉树，即根节点比所有叶子节点都大，的过程，分解成先寻找到当前数列中最大值，然后在创建左右最大子树的过程\n    * 退出情况是数列为一个数时返回null，即表示结束没有子树可以构造了\n\n```java\nTreeNode root = new TreeNode(nums[max_i]);\nroot.left = construct(nums, l, max_i);\nroot.right = construct(nums, max_i + 1, r);\n```\n* [Maximum Binary Tree II](https://leetcode.com/problems/maximum-binary-tree-ii/)\n    * 描述：在一棵现成的最大二叉树中，插入一个数，使得插入之后依然是最大二叉树\n    * 技巧点：比根节点小的数一律往根节点的右子树插。\n    * 思路：插入值与当前根节点的值比较，若大于根节点的值则创建节点，并将原根节点作为自己的左子结点，并返回新的根节点。否则的话插入值插入原根节点的右子树，并循环这个过程。若插入值比较到最后，即与null比较，则创建该节点并返回这个节点。\n\n```java\npublic TreeNode insertIntoMaxTree(TreeNode root, int val) {\n        if(root == null){\n            return new TreeNode(val);\n        }\n        if(root.val<val){\n            TreeNode head = new TreeNode(val);\n            head.left = root;\n            return head;\n        }\n        root.right = insertIntoMaxTree(root.right, val);\n        return root;\n    }\n```\n* [Second Minimum Node In a Binary Tree](https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/)\n    * 需要注意的事，必须将所有的节点都遍历完全才能找到第二小的数字。因为有一个用例将第二小的数值藏在了最下面\n    * 采用DFS或BFS都可以。关键是判断第二小的时候，先要将第一小的数找到，如果之后有数字不是小于**等于**第一小的话，才可以比较是不是第二小。如果只是单纯的小于第一小，会让第二小也成为和第一小一样的数值。\n* BFS常用结构\n\n```java\n        Queue<TreeNode> a = new LinkedList<>();\n        a.offer(p);\n        while (!a.isEmpty()){\n            for (int sz = a.size(); sz > 0; --sz) {\n                TreeNode n = a.poll();\n                //do something\n                a.offer(n.left);\n                a.offer(n.right);\n            }\n```\n## 字节/位处理\n* [Reverse Integer](https://leetcode.com/problems/reverse-integer/)\n    * java中不同数据类型的取值范围\n        * int 32\n        * short 16\n        * long 64\n        * float 32\n        * double 64\n    * 本题中关于溢出可能的判断\n   \n```java\n//方式一\n//正数溢出情况（2147483647）\nif (rev > Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 && pop > 7)) return 0;\n//负数（-2147483648）\nif (rev < Integer.MIN_VALUE/10 || (rev == Integer.MIN_VALUE / 10 && pop < -8)) return 0;\n\n\n//方式二\nif((rev - pop) / 10 != org) return 0;//溢出的话肯定计算不出原来的数字了\n```\n\n* [Number of 1 Bits](https://leetcode.com/problems/number-of-1-bits/)\n    * 找一个int数的二进制中有多少个1，hamming weight\n    * & -- 位与运算 | -- 位或运算\n\n```java\nint res = 0;\n        for(int i = 31; i >= 0; i--) {\n            if((n & 1) == 1)\n                res++;\n            n >>= 1; //右移一位\n        }\n```\n* [java中的移位操作符](https://zhuanlan.zhihu.com/p/30108890)\n\n* [Reverse Bits](https://leetcode.com/problems/reverse-bits/)\n    * 翻转32位比特值，依次移动每一位。将每次需要移动的比特放在最后一位。与1进行位与操作后，将这一位移动到正确的位置后，与结果进行位或操作。\n    \n```java\nint ans = 0;\n        for(int i = 31; i >= 0; i--) {\n            ans = ans | ((n & 1) << i);\n            n >>= 1;\n        }\n```\n\n* [Counting Bits](https://leetcode.com/problems/counting-bits/)\n    * **DP** When it comes to even numbers, i.e, 2,4,6,8, their binary should be like '10', '100', '110', '1000' \n      so one notable difference is their unit digit is always 0, \n      which means when you call >> 1- shift one bit rightwards \n      and also means dividing by 2- would cause no change to the count of '1' in the binary string.\n      \n      Vice versa, when you meet odd numbers, shifting one bit rightwards always eliminates one '1' digit from original binary string,\n      that is why we should \"compensate\" one '1' character to the count.\n      \n      To sum up, when you meet even number the count of '1's is always the same as its half number,\n      on the other hand, remember to plus one to the odds' half number.\n   \n```java\n    int[] f = new int[num + 1];\n    for (int i=1; i<=num; i++) f[i] = f[i >> 1] + (i & 1);\n    return f;\n```\n\n## Two Pointers\n\n* [浅析经典面试算法题-two pointer的运用](https://chocoluffy.com/2016/12/04/浅析经典面试算法题-two-pointer的运用/)\n\n* Two Sum\n    * integer array已经过排序\n    * 两个pointers一头一尾。那么sum只有三种可能：\n        * sum == target，则返回\n        * sum < target，头指针向后走一个\n        * sum > target，尾指针向前走一个\n    * 循环条件，头 < 尾\n    \n```java\nint low = 0;\nint high = nums.length - 1;\nwhile(low < high) {\n    if(nums[low] + nums[high] == target)\n        //do something;\n        // low++ high--;\n    else if (nums[low] + nums[high] < target)\n        low++;\n    else\n        high--;\n} \n```\n\n* 3Sum\n    * 先将数列排序，再固定第一个数字，从剩下的数列中用2 sum的方法找。\n    * 注意一些要过滤的条件：\n        * 第一个数字在移动的过程中，如果与前一个一样的话，就再移一下\n        * low和high移动的道理也一样\n \n```java\n public List<List<Integer>> threeSum(int[] nums) {\n        Arrays.sort(nums);\n        List<List<Integer>> res = new ArrayList<>()\n        for(int i = 0; i < nums.length - 2; i++) {\n            if(i == 0 || nums[i] != nums[i - 1]) {\n                int low = i + 1;\n                int high = nums.length - 1;\n                int remain = 0 - nums[i];\n                while(low < high) {\n                    if(nums[low] + nums[high] == remain) {\n                        res.add(Arrays.asList(nums[i], nums[low], nums[high]));\n                        while(low < high && nums[low + 1] == nums[low])\n                            low++;\n                        while(low < high && nums[high - 1] == nums[high])\n                            high--;\n                        low++;\n                        high--;\n                    }else if(nums[low] + nums[high] < remain)\n                        low++;\n                    else\n                        high--;\n                }\n            }\n        }\n        return res;\n    }\n```\n\n* 3Sum closest\n    * 找最接近的sum（也可能相等）\n    * 增加判断条件Math.abs小的话，就要更新。\n\n* 3Sum With Multiplicity\n    * 每一中情况都要考虑到--排列组合\n\n```java\n  if (A[j] == A[k]) {\n    // If A[j...k] are all equal, then there are C(k - j + 1, 2) \n    // combinations that meet the requirement.取两个\n    res = (res + (k - j + 1) * (k - j) / 2) % m;\n    break;\n    }\n    int l = 1, r = 1;\n    while (j + l < k && A[j + l] == A[j]) { ++l; } // l: number of elements equal to A[j].\n    while (j < k - r && A[k - r] == A[k]) { ++r; } // r: number of elements equal to A[k].\n    res = (res + l * r) % m; // found l * r cases that meet the requirement.\n    j += l; // forward j by l steps.\n    k -= r; // backward k by r steps.\n```\n\n* Sum of Square Numbers\n    * c = a^2 + b^2\n    \n```java\npublic boolean judgeSquareSum(int c) {\n        int limit = (int)Math.sqrt(c);\n        int low = 0;\n        while(low<=limit){\n            int sum = low*low + limit*limit;\n            if(c==sum){\n                return true;\n            }\n            if(sum<c){\n               low++;\n            } else {\n               limit--; \n            }\n        }\n        return false;\n    }\n```\n## 基础字符串操作\n* reverse\n```java\n public String reverse(String s) {\n      StringBuilder res=new StringBuilder();\n        for (int i = 0; i < s.length(); i++)\n            res.insert(0,s.charAt(i));\n        return res.toString();\n    }\n```\n\n* split 对应API public String[] split(String regex, int limit)\n\n```java\npublic String[] split(String s) {\n        ArrayList < String > words = new ArrayList < > ();\n        StringBuilder word = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                words.add(word.toString());\n                word = new StringBuilder();\n            } else\n                word.append( s.charAt(i));\n        }\n        words.add(word.toString());\n        return words.toArray(new String[words.size()]);\n    }\n```\n* 大小写转换\n    * a - 97 0x61(0110 0001) A - 65 0x41(0100 0001)\n    \n```java\n    //法一\n    string.toLowerCase() or toUpperCase()\n    //法二\n    if ('A' <= a[i] && a[i] <= 'Z')\n        a[i] = (char) (a[i] - 'A' + 'a');\n    //法三，按位或，把第五位的1加上\n    char c = (char)(str.charAt(i) | (char)(32));\n```\n\n## 非常规顺序操作\n\n* [ZigZag Conversion](https://leetcode.com/problems/zigzag-conversion/)\n    * 取相同数字位的进行操作：0123210123210..\n    * 法一：能够发现0之后都是加一，3之后都是减一\n    * 设置一个标志来判断是否加一还是减一\n    * 法二：变步长\n    \n```java\n    //1\n    if(curRow == 0 || curRow == numRows - 1) goingDown = !goingDown;\n    curRow += goingDown ? 1 : -1;\n    //2\n            int n = s.length();\n            int cycleLen = 2 * numRows - 2; //numRows = 4\n    \n            for (int i = 0; i < numRows; i++) {\n                for (int j = 0; j + i < n; j += cycleLen) {\n                    ret.append(s.charAt(j + i));\n                    if (i != 0 && i != numRows - 1 && j + cycleLen - i < n)\n                        ret.append(s.charAt(j + cycleLen - i));\n                }\n            }\n```\n\n## 数字计算\n\n* pow(x, n)\n    * n%2==0 -> x^n = x^(n/2) * x^(n/2) = (x*x)^(n/2)\n    * n%2==1 -> x^n = x*(x^(n/2) * x^(n/2)) = x * (x*x)^(n/2)\n\n```java\npublic double pow(double x, int n) {\n            if(n == 0)\n                return 1;\n            if(n == Integer.MIN_VALUE){//-2147483648不能直接换成正的，会溢出\n                return myPow(x*x, n/2);\n            }\n            if(n < 0){\n                x = 1/x;\n                n = -n;\n            }\n            if(n%2 == 1) \n                return myPow(x*x, n/2)*x;\n            else\n                return myPow(x*x, n/2);\n                }\n```\n\n* sqrt(x)\n    * I have seen many variants using Binary Search, the key difference is the search range. It seems easy to do it but actually there are some traps we need to take care. I made this just for a note for me.\n      Search range summary:\n      \n      * [1, Integer.MAX_VALUE](easy but not recommend)\n      * [1, x](recommended)\n      * [1, x/2](you need to do math to prove it)\n    * For case 2 and case 3, we need to take care of the corner case by making sure right >= left for [left, right], so:\n      2. x >= 1 for [1, x] => so we need to take care of the corner case: x < 1\n      3. x/2 >= 1 for [1, x/2]=> x >= 2 => so we need to take care of the corner case: x < 2\n   \n      \n```java\nclass Solution {\n    public int mySqrt(int x) {\n        long l=0,r=x; //in case of overflow\n        while(l<r){\n            long mid=l+(r-l)/2+1;\n            if(mid*mid>x) r=mid-1;\n            else l=mid;\n        }\n        return (int)l;\n    }\n}\n```","source":"_posts/MyLeetCodeSummarize.md","raw":"---\ntitle: LeetCode刷题总结（持续更新）\ndate: 2019/3/15\nupdated: 2019/3/17 \ntags:\n    - LeetCode\ncategories:\n    - 技术总结\n---\n我的答案仓库地址：[MyLeetCode](https://github.com/fangmiao97/MyLeetCode)\n## Tree与迭代、动态规划\n* [Maximum Binary Tree](https://leetcode.com/problems/maximum-binary-tree/)\n    * 思路：将创建最大二叉树，即根节点比所有叶子节点都大，的过程，分解成先寻找到当前数列中最大值，然后在创建左右最大子树的过程\n    * 退出情况是数列为一个数时返回null，即表示结束没有子树可以构造了\n\n```java\nTreeNode root = new TreeNode(nums[max_i]);\nroot.left = construct(nums, l, max_i);\nroot.right = construct(nums, max_i + 1, r);\n```\n* [Maximum Binary Tree II](https://leetcode.com/problems/maximum-binary-tree-ii/)\n    * 描述：在一棵现成的最大二叉树中，插入一个数，使得插入之后依然是最大二叉树\n    * 技巧点：比根节点小的数一律往根节点的右子树插。\n    * 思路：插入值与当前根节点的值比较，若大于根节点的值则创建节点，并将原根节点作为自己的左子结点，并返回新的根节点。否则的话插入值插入原根节点的右子树，并循环这个过程。若插入值比较到最后，即与null比较，则创建该节点并返回这个节点。\n\n```java\npublic TreeNode insertIntoMaxTree(TreeNode root, int val) {\n        if(root == null){\n            return new TreeNode(val);\n        }\n        if(root.val<val){\n            TreeNode head = new TreeNode(val);\n            head.left = root;\n            return head;\n        }\n        root.right = insertIntoMaxTree(root.right, val);\n        return root;\n    }\n```\n* [Second Minimum Node In a Binary Tree](https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/)\n    * 需要注意的事，必须将所有的节点都遍历完全才能找到第二小的数字。因为有一个用例将第二小的数值藏在了最下面\n    * 采用DFS或BFS都可以。关键是判断第二小的时候，先要将第一小的数找到，如果之后有数字不是小于**等于**第一小的话，才可以比较是不是第二小。如果只是单纯的小于第一小，会让第二小也成为和第一小一样的数值。\n* BFS常用结构\n\n```java\n        Queue<TreeNode> a = new LinkedList<>();\n        a.offer(p);\n        while (!a.isEmpty()){\n            for (int sz = a.size(); sz > 0; --sz) {\n                TreeNode n = a.poll();\n                //do something\n                a.offer(n.left);\n                a.offer(n.right);\n            }\n```\n## 字节/位处理\n* [Reverse Integer](https://leetcode.com/problems/reverse-integer/)\n    * java中不同数据类型的取值范围\n        * int 32\n        * short 16\n        * long 64\n        * float 32\n        * double 64\n    * 本题中关于溢出可能的判断\n   \n```java\n//方式一\n//正数溢出情况（2147483647）\nif (rev > Integer.MAX_VALUE/10 || (rev == Integer.MAX_VALUE / 10 && pop > 7)) return 0;\n//负数（-2147483648）\nif (rev < Integer.MIN_VALUE/10 || (rev == Integer.MIN_VALUE / 10 && pop < -8)) return 0;\n\n\n//方式二\nif((rev - pop) / 10 != org) return 0;//溢出的话肯定计算不出原来的数字了\n```\n\n* [Number of 1 Bits](https://leetcode.com/problems/number-of-1-bits/)\n    * 找一个int数的二进制中有多少个1，hamming weight\n    * & -- 位与运算 | -- 位或运算\n\n```java\nint res = 0;\n        for(int i = 31; i >= 0; i--) {\n            if((n & 1) == 1)\n                res++;\n            n >>= 1; //右移一位\n        }\n```\n* [java中的移位操作符](https://zhuanlan.zhihu.com/p/30108890)\n\n* [Reverse Bits](https://leetcode.com/problems/reverse-bits/)\n    * 翻转32位比特值，依次移动每一位。将每次需要移动的比特放在最后一位。与1进行位与操作后，将这一位移动到正确的位置后，与结果进行位或操作。\n    \n```java\nint ans = 0;\n        for(int i = 31; i >= 0; i--) {\n            ans = ans | ((n & 1) << i);\n            n >>= 1;\n        }\n```\n\n* [Counting Bits](https://leetcode.com/problems/counting-bits/)\n    * **DP** When it comes to even numbers, i.e, 2,4,6,8, their binary should be like '10', '100', '110', '1000' \n      so one notable difference is their unit digit is always 0, \n      which means when you call >> 1- shift one bit rightwards \n      and also means dividing by 2- would cause no change to the count of '1' in the binary string.\n      \n      Vice versa, when you meet odd numbers, shifting one bit rightwards always eliminates one '1' digit from original binary string,\n      that is why we should \"compensate\" one '1' character to the count.\n      \n      To sum up, when you meet even number the count of '1's is always the same as its half number,\n      on the other hand, remember to plus one to the odds' half number.\n   \n```java\n    int[] f = new int[num + 1];\n    for (int i=1; i<=num; i++) f[i] = f[i >> 1] + (i & 1);\n    return f;\n```\n\n## Two Pointers\n\n* [浅析经典面试算法题-two pointer的运用](https://chocoluffy.com/2016/12/04/浅析经典面试算法题-two-pointer的运用/)\n\n* Two Sum\n    * integer array已经过排序\n    * 两个pointers一头一尾。那么sum只有三种可能：\n        * sum == target，则返回\n        * sum < target，头指针向后走一个\n        * sum > target，尾指针向前走一个\n    * 循环条件，头 < 尾\n    \n```java\nint low = 0;\nint high = nums.length - 1;\nwhile(low < high) {\n    if(nums[low] + nums[high] == target)\n        //do something;\n        // low++ high--;\n    else if (nums[low] + nums[high] < target)\n        low++;\n    else\n        high--;\n} \n```\n\n* 3Sum\n    * 先将数列排序，再固定第一个数字，从剩下的数列中用2 sum的方法找。\n    * 注意一些要过滤的条件：\n        * 第一个数字在移动的过程中，如果与前一个一样的话，就再移一下\n        * low和high移动的道理也一样\n \n```java\n public List<List<Integer>> threeSum(int[] nums) {\n        Arrays.sort(nums);\n        List<List<Integer>> res = new ArrayList<>()\n        for(int i = 0; i < nums.length - 2; i++) {\n            if(i == 0 || nums[i] != nums[i - 1]) {\n                int low = i + 1;\n                int high = nums.length - 1;\n                int remain = 0 - nums[i];\n                while(low < high) {\n                    if(nums[low] + nums[high] == remain) {\n                        res.add(Arrays.asList(nums[i], nums[low], nums[high]));\n                        while(low < high && nums[low + 1] == nums[low])\n                            low++;\n                        while(low < high && nums[high - 1] == nums[high])\n                            high--;\n                        low++;\n                        high--;\n                    }else if(nums[low] + nums[high] < remain)\n                        low++;\n                    else\n                        high--;\n                }\n            }\n        }\n        return res;\n    }\n```\n\n* 3Sum closest\n    * 找最接近的sum（也可能相等）\n    * 增加判断条件Math.abs小的话，就要更新。\n\n* 3Sum With Multiplicity\n    * 每一中情况都要考虑到--排列组合\n\n```java\n  if (A[j] == A[k]) {\n    // If A[j...k] are all equal, then there are C(k - j + 1, 2) \n    // combinations that meet the requirement.取两个\n    res = (res + (k - j + 1) * (k - j) / 2) % m;\n    break;\n    }\n    int l = 1, r = 1;\n    while (j + l < k && A[j + l] == A[j]) { ++l; } // l: number of elements equal to A[j].\n    while (j < k - r && A[k - r] == A[k]) { ++r; } // r: number of elements equal to A[k].\n    res = (res + l * r) % m; // found l * r cases that meet the requirement.\n    j += l; // forward j by l steps.\n    k -= r; // backward k by r steps.\n```\n\n* Sum of Square Numbers\n    * c = a^2 + b^2\n    \n```java\npublic boolean judgeSquareSum(int c) {\n        int limit = (int)Math.sqrt(c);\n        int low = 0;\n        while(low<=limit){\n            int sum = low*low + limit*limit;\n            if(c==sum){\n                return true;\n            }\n            if(sum<c){\n               low++;\n            } else {\n               limit--; \n            }\n        }\n        return false;\n    }\n```\n## 基础字符串操作\n* reverse\n```java\n public String reverse(String s) {\n      StringBuilder res=new StringBuilder();\n        for (int i = 0; i < s.length(); i++)\n            res.insert(0,s.charAt(i));\n        return res.toString();\n    }\n```\n\n* split 对应API public String[] split(String regex, int limit)\n\n```java\npublic String[] split(String s) {\n        ArrayList < String > words = new ArrayList < > ();\n        StringBuilder word = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == ' ') {\n                words.add(word.toString());\n                word = new StringBuilder();\n            } else\n                word.append( s.charAt(i));\n        }\n        words.add(word.toString());\n        return words.toArray(new String[words.size()]);\n    }\n```\n* 大小写转换\n    * a - 97 0x61(0110 0001) A - 65 0x41(0100 0001)\n    \n```java\n    //法一\n    string.toLowerCase() or toUpperCase()\n    //法二\n    if ('A' <= a[i] && a[i] <= 'Z')\n        a[i] = (char) (a[i] - 'A' + 'a');\n    //法三，按位或，把第五位的1加上\n    char c = (char)(str.charAt(i) | (char)(32));\n```\n\n## 非常规顺序操作\n\n* [ZigZag Conversion](https://leetcode.com/problems/zigzag-conversion/)\n    * 取相同数字位的进行操作：0123210123210..\n    * 法一：能够发现0之后都是加一，3之后都是减一\n    * 设置一个标志来判断是否加一还是减一\n    * 法二：变步长\n    \n```java\n    //1\n    if(curRow == 0 || curRow == numRows - 1) goingDown = !goingDown;\n    curRow += goingDown ? 1 : -1;\n    //2\n            int n = s.length();\n            int cycleLen = 2 * numRows - 2; //numRows = 4\n    \n            for (int i = 0; i < numRows; i++) {\n                for (int j = 0; j + i < n; j += cycleLen) {\n                    ret.append(s.charAt(j + i));\n                    if (i != 0 && i != numRows - 1 && j + cycleLen - i < n)\n                        ret.append(s.charAt(j + cycleLen - i));\n                }\n            }\n```\n\n## 数字计算\n\n* pow(x, n)\n    * n%2==0 -> x^n = x^(n/2) * x^(n/2) = (x*x)^(n/2)\n    * n%2==1 -> x^n = x*(x^(n/2) * x^(n/2)) = x * (x*x)^(n/2)\n\n```java\npublic double pow(double x, int n) {\n            if(n == 0)\n                return 1;\n            if(n == Integer.MIN_VALUE){//-2147483648不能直接换成正的，会溢出\n                return myPow(x*x, n/2);\n            }\n            if(n < 0){\n                x = 1/x;\n                n = -n;\n            }\n            if(n%2 == 1) \n                return myPow(x*x, n/2)*x;\n            else\n                return myPow(x*x, n/2);\n                }\n```\n\n* sqrt(x)\n    * I have seen many variants using Binary Search, the key difference is the search range. It seems easy to do it but actually there are some traps we need to take care. I made this just for a note for me.\n      Search range summary:\n      \n      * [1, Integer.MAX_VALUE](easy but not recommend)\n      * [1, x](recommended)\n      * [1, x/2](you need to do math to prove it)\n    * For case 2 and case 3, we need to take care of the corner case by making sure right >= left for [left, right], so:\n      2. x >= 1 for [1, x] => so we need to take care of the corner case: x < 1\n      3. x/2 >= 1 for [1, x/2]=> x >= 2 => so we need to take care of the corner case: x < 2\n   \n      \n```java\nclass Solution {\n    public int mySqrt(int x) {\n        long l=0,r=x; //in case of overflow\n        while(l<r){\n            long mid=l+(r-l)/2+1;\n            if(mid*mid>x) r=mid-1;\n            else l=mid;\n        }\n        return (int)l;\n    }\n}\n```","slug":"MyLeetCodeSummarize","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjttk83pj0018lcqjq5o4tjac","content":"<p>我的答案仓库地址：<a href=\"https://github.com/fangmiao97/MyLeetCode\" target=\"_blank\" rel=\"noopener\">MyLeetCode</a></p>\n<h2 id=\"Tree与迭代、动态规划\"><a href=\"#Tree与迭代、动态规划\" class=\"headerlink\" title=\"Tree与迭代、动态规划\"></a>Tree与迭代、动态规划</h2><ul>\n<li><a href=\"https://leetcode.com/problems/maximum-binary-tree/\" target=\"_blank\" rel=\"noopener\">Maximum Binary Tree</a><ul>\n<li>思路：将创建最大二叉树，即根节点比所有叶子节点都大，的过程，分解成先寻找到当前数列中最大值，然后在创建左右最大子树的过程</li>\n<li>退出情况是数列为一个数时返回null，即表示结束没有子树可以构造了</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TreeNode root = <span class=\"keyword\">new</span> TreeNode(nums[max_i]);</span><br><span class=\"line\">root.left = construct(nums, l, max_i);</span><br><span class=\"line\">root.right = construct(nums, max_i + <span class=\"number\">1</span>, r);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://leetcode.com/problems/maximum-binary-tree-ii/\" target=\"_blank\" rel=\"noopener\">Maximum Binary Tree II</a><ul>\n<li>描述：在一棵现成的最大二叉树中，插入一个数，使得插入之后依然是最大二叉树</li>\n<li>技巧点：比根节点小的数一律往根节点的右子树插。</li>\n<li>思路：插入值与当前根节点的值比较，若大于根节点的值则创建节点，并将原根节点作为自己的左子结点，并返回新的根节点。否则的话插入值插入原根节点的右子树，并循环这个过程。若插入值比较到最后，即与null比较，则创建该节点并返回这个节点。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> TreeNode <span class=\"title\">insertIntoMaxTree</span><span class=\"params\">(TreeNode root, <span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> TreeNode(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.val&lt;val)&#123;</span><br><span class=\"line\">            TreeNode head = <span class=\"keyword\">new</span> TreeNode(val);</span><br><span class=\"line\">            head.left = root;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        root.right = insertIntoMaxTree(root.right, val);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/\" target=\"_blank\" rel=\"noopener\">Second Minimum Node In a Binary Tree</a><ul>\n<li>需要注意的事，必须将所有的节点都遍历完全才能找到第二小的数字。因为有一个用例将第二小的数值藏在了最下面</li>\n<li>采用DFS或BFS都可以。关键是判断第二小的时候，先要将第一小的数找到，如果之后有数字不是小于<strong>等于</strong>第一小的话，才可以比较是不是第二小。如果只是单纯的小于第一小，会让第二小也成为和第一小一样的数值。</li>\n</ul>\n</li>\n<li>BFS常用结构</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Queue&lt;TreeNode&gt; a = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">a.offer(p);</span><br><span class=\"line\"><span class=\"keyword\">while</span> (!a.isEmpty())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> sz = a.size(); sz &gt; <span class=\"number\">0</span>; --sz) &#123;</span><br><span class=\"line\">        TreeNode n = a.poll();</span><br><span class=\"line\">        <span class=\"comment\">//do something</span></span><br><span class=\"line\">        a.offer(n.left);</span><br><span class=\"line\">        a.offer(n.right);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字节-位处理\"><a href=\"#字节-位处理\" class=\"headerlink\" title=\"字节/位处理\"></a>字节/位处理</h2><ul>\n<li><a href=\"https://leetcode.com/problems/reverse-integer/\" target=\"_blank\" rel=\"noopener\">Reverse Integer</a><ul>\n<li>java中不同数据类型的取值范围<ul>\n<li>int 32</li>\n<li>short 16</li>\n<li>long 64</li>\n<li>float 32</li>\n<li>double 64</li>\n</ul>\n</li>\n<li>本题中关于溢出可能的判断</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式一</span></span><br><span class=\"line\"><span class=\"comment\">//正数溢出情况（2147483647）</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (rev &gt; Integer.MAX_VALUE/<span class=\"number\">10</span> || (rev == Integer.MAX_VALUE / <span class=\"number\">10</span> &amp;&amp; pop &gt; <span class=\"number\">7</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//负数（-2147483648）</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (rev &lt; Integer.MIN_VALUE/<span class=\"number\">10</span> || (rev == Integer.MIN_VALUE / <span class=\"number\">10</span> &amp;&amp; pop &lt; -<span class=\"number\">8</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式二</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>((rev - pop) / <span class=\"number\">10</span> != org) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//溢出的话肯定计算不出原来的数字了</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://leetcode.com/problems/number-of-1-bits/\" target=\"_blank\" rel=\"noopener\">Number of 1 Bits</a><ul>\n<li>找一个int数的二进制中有多少个1，hamming weight</li>\n<li>&amp; – 位与运算 | – 位或运算</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">31</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((n &amp; <span class=\"number\">1</span>) == <span class=\"number\">1</span>)</span><br><span class=\"line\">                res++;</span><br><span class=\"line\">            n &gt;&gt;= <span class=\"number\">1</span>; <span class=\"comment\">//右移一位</span></span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/30108890\" target=\"_blank\" rel=\"noopener\">java中的移位操作符</a></p>\n</li>\n<li><p><a href=\"https://leetcode.com/problems/reverse-bits/\" target=\"_blank\" rel=\"noopener\">Reverse Bits</a></p>\n<ul>\n<li>翻转32位比特值，依次移动每一位。将每次需要移动的比特放在最后一位。与1进行位与操作后，将这一位移动到正确的位置后，与结果进行位或操作。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">31</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            ans = ans | ((n &amp; <span class=\"number\">1</span>) &lt;&lt; i);</span><br><span class=\"line\">            n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p><a href=\"https://leetcode.com/problems/counting-bits/\" target=\"_blank\" rel=\"noopener\">Counting Bits</a></p>\n<ul>\n<li><p><strong>DP</strong> When it comes to even numbers, i.e, 2,4,6,8, their binary should be like ‘10’, ‘100’, ‘110’, ‘1000’<br>so one notable difference is their unit digit is always 0,<br>which means when you call &gt;&gt; 1- shift one bit rightwards<br>and also means dividing by 2- would cause no change to the count of ‘1’ in the binary string.</p>\n<p>Vice versa, when you meet odd numbers, shifting one bit rightwards always eliminates one ‘1’ digit from original binary string,<br>that is why we should “compensate” one ‘1’ character to the count.</p>\n<p>To sum up, when you meet even number the count of ‘1’s is always the same as its half number,<br>on the other hand, remember to plus one to the odds’ half number.</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] f = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[num + <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=num; i++) f[i] = f[i &gt;&gt; <span class=\"number\">1</span>] + (i &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> f;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Two-Pointers\"><a href=\"#Two-Pointers\" class=\"headerlink\" title=\"Two Pointers\"></a>Two Pointers</h2><ul>\n<li><p><a href=\"https://chocoluffy.com/2016/12/04/浅析经典面试算法题-two-pointer的运用/\" target=\"_blank\" rel=\"noopener\">浅析经典面试算法题-two pointer的运用</a></p>\n</li>\n<li><p>Two Sum</p>\n<ul>\n<li>integer array已经过排序</li>\n<li>两个pointers一头一尾。那么sum只有三种可能：<ul>\n<li>sum == target，则返回</li>\n<li>sum &lt; target，头指针向后走一个</li>\n<li>sum &gt; target，尾指针向前走一个</li>\n</ul>\n</li>\n<li>循环条件，头 &lt; 尾</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> high = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(low &lt; high) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(nums[low] + nums[high] == target)</span><br><span class=\"line\">        <span class=\"comment\">//do something;</span></span><br><span class=\"line\">        <span class=\"comment\">// low++ high--;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[low] + nums[high] &lt; target)</span><br><span class=\"line\">        low++;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        high--;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3Sum<ul>\n<li>先将数列排序，再固定第一个数字，从剩下的数列中用2 sum的方法找。</li>\n<li>注意一些要过滤的条件：<ul>\n<li>第一个数字在移动的过程中，如果与前一个一样的话，就再移一下</li>\n<li>low和high移动的道理也一样</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class=\"keyword\">int</span>[] nums) &#123;</span><br><span class=\"line\">       Arrays.sort(nums);</span><br><span class=\"line\">       List&lt;List&lt;Integer&gt;&gt; res = <span class=\"keyword\">new</span> ArrayList&lt;&gt;()</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length - <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(i == <span class=\"number\">0</span> || nums[i] != nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">int</span> low = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">               <span class=\"keyword\">int</span> high = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">               <span class=\"keyword\">int</span> remain = <span class=\"number\">0</span> - nums[i];</span><br><span class=\"line\">               <span class=\"keyword\">while</span>(low &lt; high) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span>(nums[low] + nums[high] == remain) &#123;</span><br><span class=\"line\">                       res.add(Arrays.asList(nums[i], nums[low], nums[high]));</span><br><span class=\"line\">                       <span class=\"keyword\">while</span>(low &lt; high &amp;&amp; nums[low + <span class=\"number\">1</span>] == nums[low])</span><br><span class=\"line\">                           low++;</span><br><span class=\"line\">                       <span class=\"keyword\">while</span>(low &lt; high &amp;&amp; nums[high - <span class=\"number\">1</span>] == nums[high])</span><br><span class=\"line\">                           high--;</span><br><span class=\"line\">                       low++;</span><br><span class=\"line\">                       high--;</span><br><span class=\"line\">                   &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nums[low] + nums[high] &lt; remain)</span><br><span class=\"line\">                       low++;</span><br><span class=\"line\">                   <span class=\"keyword\">else</span></span><br><span class=\"line\">                       high--;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>3Sum closest</p>\n<ul>\n<li>找最接近的sum（也可能相等）</li>\n<li>增加判断条件Math.abs小的话，就要更新。</li>\n</ul>\n</li>\n<li><p>3Sum With Multiplicity</p>\n<ul>\n<li>每一中情况都要考虑到–排列组合</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (A[j] == A[k]) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// If A[j...k] are all equal, then there are C(k - j + 1, 2) </span></span><br><span class=\"line\">  <span class=\"comment\">// combinations that meet the requirement.取两个</span></span><br><span class=\"line\">  res = (res + (k - j + <span class=\"number\">1</span>) * (k - j) / <span class=\"number\">2</span>) % m;</span><br><span class=\"line\">  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> l = <span class=\"number\">1</span>, r = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j + l &lt; k &amp;&amp; A[j + l] == A[j]) &#123; ++l; &#125; <span class=\"comment\">// l: number of elements equal to A[j].</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j &lt; k - r &amp;&amp; A[k - r] == A[k]) &#123; ++r; &#125; <span class=\"comment\">// r: number of elements equal to A[k].</span></span><br><span class=\"line\">  res = (res + l * r) % m; <span class=\"comment\">// found l * r cases that meet the requirement.</span></span><br><span class=\"line\">  j += l; <span class=\"comment\">// forward j by l steps.</span></span><br><span class=\"line\">  k -= r; <span class=\"comment\">// backward k by r steps.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Sum of Square Numbers<ul>\n<li>c = a^2 + b^2</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">judgeSquareSum</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> limit = (<span class=\"keyword\">int</span>)Math.sqrt(c);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low&lt;=limit)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum = low*low + limit*limit;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c==sum)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum&lt;c)&#123;</span><br><span class=\"line\">               low++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               limit--; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基础字符串操作\"><a href=\"#基础字符串操作\" class=\"headerlink\" title=\"基础字符串操作\"></a>基础字符串操作</h2><ul>\n<li><p>reverse</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">reverse</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">     StringBuilder res=<span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length(); i++)</span><br><span class=\"line\">           res.insert(<span class=\"number\">0</span>,s.charAt(i));</span><br><span class=\"line\">       <span class=\"keyword\">return</span> res.toString();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>split 对应API public String[] split(String regex, int limit)</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> String[] split(String s) &#123;</span><br><span class=\"line\">        ArrayList &lt; String &gt; words = <span class=\"keyword\">new</span> ArrayList &lt; &gt; ();</span><br><span class=\"line\">        StringBuilder word = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.charAt(i) == <span class=\"string\">' '</span>) &#123;</span><br><span class=\"line\">                words.add(word.toString());</span><br><span class=\"line\">                word = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                word.append( s.charAt(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        words.add(word.toString());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> words.toArray(<span class=\"keyword\">new</span> String[words.size()]);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>大小写转换<ul>\n<li>a - 97 0x61(0110 0001) A - 65 0x41(0100 0001)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//法一</span></span><br><span class=\"line\">string.toLowerCase() <span class=\"function\">or <span class=\"title\">toUpperCase</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//法二</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">if</span> <span class=\"params\">(<span class=\"string\">'A'</span> &lt;= a[i] &amp;&amp; a[i] &lt;= <span class=\"string\">'Z'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">    a[i] </span>= (<span class=\"keyword\">char</span>) (a[i] - <span class=\"string\">'A'</span> + <span class=\"string\">'a'</span>);</span><br><span class=\"line\"><span class=\"comment\">//法三，按位或，把第五位的1加上</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> c = (<span class=\"keyword\">char</span>)(str.charAt(i) | (<span class=\"keyword\">char</span>)(<span class=\"number\">32</span>));</span><br></pre></td></tr></table></figure>\n<h2 id=\"非常规顺序操作\"><a href=\"#非常规顺序操作\" class=\"headerlink\" title=\"非常规顺序操作\"></a>非常规顺序操作</h2><ul>\n<li><a href=\"https://leetcode.com/problems/zigzag-conversion/\" target=\"_blank\" rel=\"noopener\">ZigZag Conversion</a><ul>\n<li>取相同数字位的进行操作：0123210123210..</li>\n<li>法一：能够发现0之后都是加一，3之后都是减一</li>\n<li>设置一个标志来判断是否加一还是减一</li>\n<li>法二：变步长</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(curRow == <span class=\"number\">0</span> || curRow == numRows - <span class=\"number\">1</span>) goingDown = !goingDown;</span><br><span class=\"line\">curRow += goingDown ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">//2</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cycleLen = <span class=\"number\">2</span> * numRows - <span class=\"number\">2</span>; <span class=\"comment\">//numRows = 4</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; numRows; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j + i &lt; n; j += cycleLen) &#123;</span><br><span class=\"line\">                ret.append(s.charAt(j + i));</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; i != numRows - <span class=\"number\">1</span> &amp;&amp; j + cycleLen - i &lt; n)</span><br><span class=\"line\">                    ret.append(s.charAt(j + cycleLen - i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数字计算\"><a href=\"#数字计算\" class=\"headerlink\" title=\"数字计算\"></a>数字计算</h2><ul>\n<li>pow(x, n)<ul>\n<li>n%2==0 -&gt; x^n = x^(n/2) <em> x^(n/2) = (x</em>x)^(n/2)</li>\n<li>n%2==1 -&gt; x^n = x<em>(x^(n/2) </em> x^(n/2)) = x <em> (x</em>x)^(n/2)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">pow</span><span class=\"params\">(<span class=\"keyword\">double</span> x, <span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n == Integer.MIN_VALUE)&#123;<span class=\"comment\">//-2147483648不能直接换成正的，会溢出</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> myPow(x*x, n/<span class=\"number\">2</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                x = <span class=\"number\">1</span>/x;</span><br><span class=\"line\">                n = -n;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n%<span class=\"number\">2</span> == <span class=\"number\">1</span>) </span><br><span class=\"line\">                <span class=\"keyword\">return</span> myPow(x*x, n/<span class=\"number\">2</span>)*x;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> myPow(x*x, n/<span class=\"number\">2</span>);</span><br><span class=\"line\">                &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>sqrt(x)</p>\n<ul>\n<li><p>I have seen many variants using Binary Search, the key difference is the search range. It seems easy to do it but actually there are some traps we need to take care. I made this just for a note for me.<br>Search range summary:</p>\n<ul>\n<li><a href=\"easy but not recommend\">1, Integer.MAX_VALUE</a></li>\n<li><a href=\"recommended\">1, x</a></li>\n<li><a href=\"you need to do math to prove it\">1, x/2</a></li>\n</ul>\n</li>\n<li>For case 2 and case 3, we need to take care of the corner case by making sure right &gt;= left for [left, right], so:<ol start=\"2\">\n<li>x &gt;= 1 for [1, x] =&gt; so we need to take care of the corner case: x &lt; 1</li>\n<li>x/2 &gt;= 1 for [1, x/2]=&gt; x &gt;= 2 =&gt; so we need to take care of the corner case: x &lt; 2</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">mySqrt</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> l=<span class=\"number\">0</span>,r=x; <span class=\"comment\">//in case of overflow</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l&lt;r)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> mid=l+(r-l)/<span class=\"number\">2</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mid*mid&gt;x) r=mid-<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> l=mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"projects":[{"name":"AISmallTribe-weixinMiniProgram","url":"https://github.com/fangmiao97/AISmallTribe-weixinMiniProgram","desc":"一个展示型的微信小程序，旨在向更多对人工智能、机器学习感兴趣的非专业人士提供简单、可视化的算法展示"},{"name":"Minions-Real-time-data-streaming-processing-project","url":"https://github.com/fangmiao97/Minions-Real-time-data-streaming-processing-project","desc":"My Graduation Design Works🌟, using Flume/Kafka/Spark Streaming/React/Ant Design (Pro)."}]}},"excerpt":"","more":"<p>我的答案仓库地址：<a href=\"https://github.com/fangmiao97/MyLeetCode\" target=\"_blank\" rel=\"noopener\">MyLeetCode</a></p>\n<h2 id=\"Tree与迭代、动态规划\"><a href=\"#Tree与迭代、动态规划\" class=\"headerlink\" title=\"Tree与迭代、动态规划\"></a>Tree与迭代、动态规划</h2><ul>\n<li><a href=\"https://leetcode.com/problems/maximum-binary-tree/\" target=\"_blank\" rel=\"noopener\">Maximum Binary Tree</a><ul>\n<li>思路：将创建最大二叉树，即根节点比所有叶子节点都大，的过程，分解成先寻找到当前数列中最大值，然后在创建左右最大子树的过程</li>\n<li>退出情况是数列为一个数时返回null，即表示结束没有子树可以构造了</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TreeNode root = <span class=\"keyword\">new</span> TreeNode(nums[max_i]);</span><br><span class=\"line\">root.left = construct(nums, l, max_i);</span><br><span class=\"line\">root.right = construct(nums, max_i + <span class=\"number\">1</span>, r);</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://leetcode.com/problems/maximum-binary-tree-ii/\" target=\"_blank\" rel=\"noopener\">Maximum Binary Tree II</a><ul>\n<li>描述：在一棵现成的最大二叉树中，插入一个数，使得插入之后依然是最大二叉树</li>\n<li>技巧点：比根节点小的数一律往根节点的右子树插。</li>\n<li>思路：插入值与当前根节点的值比较，若大于根节点的值则创建节点，并将原根节点作为自己的左子结点，并返回新的根节点。否则的话插入值插入原根节点的右子树，并循环这个过程。若插入值比较到最后，即与null比较，则创建该节点并返回这个节点。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> TreeNode <span class=\"title\">insertIntoMaxTree</span><span class=\"params\">(TreeNode root, <span class=\"keyword\">int</span> val)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> TreeNode(val);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(root.val&lt;val)&#123;</span><br><span class=\"line\">            TreeNode head = <span class=\"keyword\">new</span> TreeNode(val);</span><br><span class=\"line\">            head.left = root;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> head;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        root.right = insertIntoMaxTree(root.right, val);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/\" target=\"_blank\" rel=\"noopener\">Second Minimum Node In a Binary Tree</a><ul>\n<li>需要注意的事，必须将所有的节点都遍历完全才能找到第二小的数字。因为有一个用例将第二小的数值藏在了最下面</li>\n<li>采用DFS或BFS都可以。关键是判断第二小的时候，先要将第一小的数找到，如果之后有数字不是小于<strong>等于</strong>第一小的话，才可以比较是不是第二小。如果只是单纯的小于第一小，会让第二小也成为和第一小一样的数值。</li>\n</ul>\n</li>\n<li>BFS常用结构</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Queue&lt;TreeNode&gt; a = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">a.offer(p);</span><br><span class=\"line\"><span class=\"keyword\">while</span> (!a.isEmpty())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> sz = a.size(); sz &gt; <span class=\"number\">0</span>; --sz) &#123;</span><br><span class=\"line\">        TreeNode n = a.poll();</span><br><span class=\"line\">        <span class=\"comment\">//do something</span></span><br><span class=\"line\">        a.offer(n.left);</span><br><span class=\"line\">        a.offer(n.right);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"字节-位处理\"><a href=\"#字节-位处理\" class=\"headerlink\" title=\"字节/位处理\"></a>字节/位处理</h2><ul>\n<li><a href=\"https://leetcode.com/problems/reverse-integer/\" target=\"_blank\" rel=\"noopener\">Reverse Integer</a><ul>\n<li>java中不同数据类型的取值范围<ul>\n<li>int 32</li>\n<li>short 16</li>\n<li>long 64</li>\n<li>float 32</li>\n<li>double 64</li>\n</ul>\n</li>\n<li>本题中关于溢出可能的判断</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//方式一</span></span><br><span class=\"line\"><span class=\"comment\">//正数溢出情况（2147483647）</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (rev &gt; Integer.MAX_VALUE/<span class=\"number\">10</span> || (rev == Integer.MAX_VALUE / <span class=\"number\">10</span> &amp;&amp; pop &gt; <span class=\"number\">7</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">//负数（-2147483648）</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (rev &lt; Integer.MIN_VALUE/<span class=\"number\">10</span> || (rev == Integer.MIN_VALUE / <span class=\"number\">10</span> &amp;&amp; pop &lt; -<span class=\"number\">8</span>)) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//方式二</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>((rev - pop) / <span class=\"number\">10</span> != org) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">//溢出的话肯定计算不出原来的数字了</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li><a href=\"https://leetcode.com/problems/number-of-1-bits/\" target=\"_blank\" rel=\"noopener\">Number of 1 Bits</a><ul>\n<li>找一个int数的二进制中有多少个1，hamming weight</li>\n<li>&amp; – 位与运算 | – 位或运算</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">31</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((n &amp; <span class=\"number\">1</span>) == <span class=\"number\">1</span>)</span><br><span class=\"line\">                res++;</span><br><span class=\"line\">            n &gt;&gt;= <span class=\"number\">1</span>; <span class=\"comment\">//右移一位</span></span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p><a href=\"https://zhuanlan.zhihu.com/p/30108890\" target=\"_blank\" rel=\"noopener\">java中的移位操作符</a></p>\n</li>\n<li><p><a href=\"https://leetcode.com/problems/reverse-bits/\" target=\"_blank\" rel=\"noopener\">Reverse Bits</a></p>\n<ul>\n<li>翻转32位比特值，依次移动每一位。将每次需要移动的比特放在最后一位。与1进行位与操作后，将这一位移动到正确的位置后，与结果进行位或操作。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">31</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">            ans = ans | ((n &amp; <span class=\"number\">1</span>) &lt;&lt; i);</span><br><span class=\"line\">            n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p><a href=\"https://leetcode.com/problems/counting-bits/\" target=\"_blank\" rel=\"noopener\">Counting Bits</a></p>\n<ul>\n<li><p><strong>DP</strong> When it comes to even numbers, i.e, 2,4,6,8, their binary should be like ‘10’, ‘100’, ‘110’, ‘1000’<br>so one notable difference is their unit digit is always 0,<br>which means when you call &gt;&gt; 1- shift one bit rightwards<br>and also means dividing by 2- would cause no change to the count of ‘1’ in the binary string.</p>\n<p>Vice versa, when you meet odd numbers, shifting one bit rightwards always eliminates one ‘1’ digit from original binary string,<br>that is why we should “compensate” one ‘1’ character to the count.</p>\n<p>To sum up, when you meet even number the count of ‘1’s is always the same as its half number,<br>on the other hand, remember to plus one to the odds’ half number.</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] f = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[num + <span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>; i&lt;=num; i++) f[i] = f[i &gt;&gt; <span class=\"number\">1</span>] + (i &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> f;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Two-Pointers\"><a href=\"#Two-Pointers\" class=\"headerlink\" title=\"Two Pointers\"></a>Two Pointers</h2><ul>\n<li><p><a href=\"https://chocoluffy.com/2016/12/04/浅析经典面试算法题-two-pointer的运用/\" target=\"_blank\" rel=\"noopener\">浅析经典面试算法题-two pointer的运用</a></p>\n</li>\n<li><p>Two Sum</p>\n<ul>\n<li>integer array已经过排序</li>\n<li>两个pointers一头一尾。那么sum只有三种可能：<ul>\n<li>sum == target，则返回</li>\n<li>sum &lt; target，头指针向后走一个</li>\n<li>sum &gt; target，尾指针向前走一个</li>\n</ul>\n</li>\n<li>循环条件，头 &lt; 尾</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> high = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">while</span>(low &lt; high) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(nums[low] + nums[high] == target)</span><br><span class=\"line\">        <span class=\"comment\">//do something;</span></span><br><span class=\"line\">        <span class=\"comment\">// low++ high--;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[low] + nums[high] &lt; target)</span><br><span class=\"line\">        low++;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        high--;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3Sum<ul>\n<li>先将数列排序，再固定第一个数字，从剩下的数列中用2 sum的方法找。</li>\n<li>注意一些要过滤的条件：<ul>\n<li>第一个数字在移动的过程中，如果与前一个一样的话，就再移一下</li>\n<li>low和high移动的道理也一样</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class=\"keyword\">int</span>[] nums) &#123;</span><br><span class=\"line\">       Arrays.sort(nums);</span><br><span class=\"line\">       List&lt;List&lt;Integer&gt;&gt; res = <span class=\"keyword\">new</span> ArrayList&lt;&gt;()</span><br><span class=\"line\">       <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nums.length - <span class=\"number\">2</span>; i++) &#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(i == <span class=\"number\">0</span> || nums[i] != nums[i - <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">               <span class=\"keyword\">int</span> low = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">               <span class=\"keyword\">int</span> high = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">               <span class=\"keyword\">int</span> remain = <span class=\"number\">0</span> - nums[i];</span><br><span class=\"line\">               <span class=\"keyword\">while</span>(low &lt; high) &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span>(nums[low] + nums[high] == remain) &#123;</span><br><span class=\"line\">                       res.add(Arrays.asList(nums[i], nums[low], nums[high]));</span><br><span class=\"line\">                       <span class=\"keyword\">while</span>(low &lt; high &amp;&amp; nums[low + <span class=\"number\">1</span>] == nums[low])</span><br><span class=\"line\">                           low++;</span><br><span class=\"line\">                       <span class=\"keyword\">while</span>(low &lt; high &amp;&amp; nums[high - <span class=\"number\">1</span>] == nums[high])</span><br><span class=\"line\">                           high--;</span><br><span class=\"line\">                       low++;</span><br><span class=\"line\">                       high--;</span><br><span class=\"line\">                   &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nums[low] + nums[high] &lt; remain)</span><br><span class=\"line\">                       low++;</span><br><span class=\"line\">                   <span class=\"keyword\">else</span></span><br><span class=\"line\">                       high--;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>3Sum closest</p>\n<ul>\n<li>找最接近的sum（也可能相等）</li>\n<li>增加判断条件Math.abs小的话，就要更新。</li>\n</ul>\n</li>\n<li><p>3Sum With Multiplicity</p>\n<ul>\n<li>每一中情况都要考虑到–排列组合</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (A[j] == A[k]) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// If A[j...k] are all equal, then there are C(k - j + 1, 2) </span></span><br><span class=\"line\">  <span class=\"comment\">// combinations that meet the requirement.取两个</span></span><br><span class=\"line\">  res = (res + (k - j + <span class=\"number\">1</span>) * (k - j) / <span class=\"number\">2</span>) % m;</span><br><span class=\"line\">  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> l = <span class=\"number\">1</span>, r = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j + l &lt; k &amp;&amp; A[j + l] == A[j]) &#123; ++l; &#125; <span class=\"comment\">// l: number of elements equal to A[j].</span></span><br><span class=\"line\">  <span class=\"keyword\">while</span> (j &lt; k - r &amp;&amp; A[k - r] == A[k]) &#123; ++r; &#125; <span class=\"comment\">// r: number of elements equal to A[k].</span></span><br><span class=\"line\">  res = (res + l * r) % m; <span class=\"comment\">// found l * r cases that meet the requirement.</span></span><br><span class=\"line\">  j += l; <span class=\"comment\">// forward j by l steps.</span></span><br><span class=\"line\">  k -= r; <span class=\"comment\">// backward k by r steps.</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Sum of Square Numbers<ul>\n<li>c = a^2 + b^2</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">judgeSquareSum</span><span class=\"params\">(<span class=\"keyword\">int</span> c)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> limit = (<span class=\"keyword\">int</span>)Math.sqrt(c);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low&lt;=limit)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> sum = low*low + limit*limit;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(c==sum)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sum&lt;c)&#123;</span><br><span class=\"line\">               low++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">               limit--; </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"基础字符串操作\"><a href=\"#基础字符串操作\" class=\"headerlink\" title=\"基础字符串操作\"></a>基础字符串操作</h2><ul>\n<li><p>reverse</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">reverse</span><span class=\"params\">(String s)</span> </span>&#123;</span><br><span class=\"line\">     StringBuilder res=<span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">       <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length(); i++)</span><br><span class=\"line\">           res.insert(<span class=\"number\">0</span>,s.charAt(i));</span><br><span class=\"line\">       <span class=\"keyword\">return</span> res.toString();</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>split 对应API public String[] split(String regex, int limit)</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> String[] split(String s) &#123;</span><br><span class=\"line\">        ArrayList &lt; String &gt; words = <span class=\"keyword\">new</span> ArrayList &lt; &gt; ();</span><br><span class=\"line\">        StringBuilder word = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.charAt(i) == <span class=\"string\">' '</span>) &#123;</span><br><span class=\"line\">                words.add(word.toString());</span><br><span class=\"line\">                word = <span class=\"keyword\">new</span> StringBuilder();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">                word.append( s.charAt(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        words.add(word.toString());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> words.toArray(<span class=\"keyword\">new</span> String[words.size()]);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>大小写转换<ul>\n<li>a - 97 0x61(0110 0001) A - 65 0x41(0100 0001)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//法一</span></span><br><span class=\"line\">string.toLowerCase() <span class=\"function\">or <span class=\"title\">toUpperCase</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"comment\">//法二</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">if</span> <span class=\"params\">(<span class=\"string\">'A'</span> &lt;= a[i] &amp;&amp; a[i] &lt;= <span class=\"string\">'Z'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">    a[i] </span>= (<span class=\"keyword\">char</span>) (a[i] - <span class=\"string\">'A'</span> + <span class=\"string\">'a'</span>);</span><br><span class=\"line\"><span class=\"comment\">//法三，按位或，把第五位的1加上</span></span><br><span class=\"line\"><span class=\"keyword\">char</span> c = (<span class=\"keyword\">char</span>)(str.charAt(i) | (<span class=\"keyword\">char</span>)(<span class=\"number\">32</span>));</span><br></pre></td></tr></table></figure>\n<h2 id=\"非常规顺序操作\"><a href=\"#非常规顺序操作\" class=\"headerlink\" title=\"非常规顺序操作\"></a>非常规顺序操作</h2><ul>\n<li><a href=\"https://leetcode.com/problems/zigzag-conversion/\" target=\"_blank\" rel=\"noopener\">ZigZag Conversion</a><ul>\n<li>取相同数字位的进行操作：0123210123210..</li>\n<li>法一：能够发现0之后都是加一，3之后都是减一</li>\n<li>设置一个标志来判断是否加一还是减一</li>\n<li>法二：变步长</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(curRow == <span class=\"number\">0</span> || curRow == numRows - <span class=\"number\">1</span>) goingDown = !goingDown;</span><br><span class=\"line\">curRow += goingDown ? <span class=\"number\">1</span> : -<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"comment\">//2</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> n = s.length();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> cycleLen = <span class=\"number\">2</span> * numRows - <span class=\"number\">2</span>; <span class=\"comment\">//numRows = 4</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; numRows; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j + i &lt; n; j += cycleLen) &#123;</span><br><span class=\"line\">                ret.append(s.charAt(j + i));</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i != <span class=\"number\">0</span> &amp;&amp; i != numRows - <span class=\"number\">1</span> &amp;&amp; j + cycleLen - i &lt; n)</span><br><span class=\"line\">                    ret.append(s.charAt(j + cycleLen - i));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"数字计算\"><a href=\"#数字计算\" class=\"headerlink\" title=\"数字计算\"></a>数字计算</h2><ul>\n<li>pow(x, n)<ul>\n<li>n%2==0 -&gt; x^n = x^(n/2) <em> x^(n/2) = (x</em>x)^(n/2)</li>\n<li>n%2==1 -&gt; x^n = x<em>(x^(n/2) </em> x^(n/2)) = x <em> (x</em>x)^(n/2)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">pow</span><span class=\"params\">(<span class=\"keyword\">double</span> x, <span class=\"keyword\">int</span> n)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n == Integer.MIN_VALUE)&#123;<span class=\"comment\">//-2147483648不能直接换成正的，会溢出</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> myPow(x*x, n/<span class=\"number\">2</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n &lt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                x = <span class=\"number\">1</span>/x;</span><br><span class=\"line\">                n = -n;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(n%<span class=\"number\">2</span> == <span class=\"number\">1</span>) </span><br><span class=\"line\">                <span class=\"keyword\">return</span> myPow(x*x, n/<span class=\"number\">2</span>)*x;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> myPow(x*x, n/<span class=\"number\">2</span>);</span><br><span class=\"line\">                &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>sqrt(x)</p>\n<ul>\n<li><p>I have seen many variants using Binary Search, the key difference is the search range. It seems easy to do it but actually there are some traps we need to take care. I made this just for a note for me.<br>Search range summary:</p>\n<ul>\n<li><a href=\"easy but not recommend\">1, Integer.MAX_VALUE</a></li>\n<li><a href=\"recommended\">1, x</a></li>\n<li><a href=\"you need to do math to prove it\">1, x/2</a></li>\n</ul>\n</li>\n<li>For case 2 and case 3, we need to take care of the corner case by making sure right &gt;= left for [left, right], so:<ol start=\"2\">\n<li>x &gt;= 1 for [1, x] =&gt; so we need to take care of the corner case: x &lt; 1</li>\n<li>x/2 &gt;= 1 for [1, x/2]=&gt; x &gt;= 2 =&gt; so we need to take care of the corner case: x &lt; 2</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">mySqrt</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> l=<span class=\"number\">0</span>,r=x; <span class=\"comment\">//in case of overflow</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(l&lt;r)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">long</span> mid=l+(r-l)/<span class=\"number\">2</span>+<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(mid*mid&gt;x) r=mid-<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> l=mid;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjttk83na0008lcqjyncemvrc","category_id":"cjttk83n30004lcqj4qmowl8a","_id":"cjttk83ns000flcqj6cif3pu7"},{"post_id":"cjttk83mm0000lcqjkm4bn61t","category_id":"cjttk83n30004lcqj4qmowl8a","_id":"cjttk83nv000jlcqjws5dputz"},{"post_id":"cjttk83my0002lcqjw2vqr1p9","category_id":"cjttk83n30004lcqj4qmowl8a","_id":"cjttk83o0000mlcqj9rp21d97"},{"post_id":"cjttk83no000elcqj8w1vujkc","category_id":"cjttk83n30004lcqj4qmowl8a","_id":"cjttk83o3000plcqjwlo9tp22"},{"post_id":"cjttk83n60006lcqjswu3yzgx","category_id":"cjttk83n30004lcqj4qmowl8a","_id":"cjttk83o5000slcqjdb2e1dbr"},{"post_id":"cjttk83nb0009lcqjyyxsh4pg","category_id":"cjttk83ny000llcqjahp1c62n","_id":"cjttk83ob000zlcqjh7ljc10q"},{"post_id":"cjttk83nj000dlcqjm8brwsgy","category_id":"cjttk83ny000llcqjahp1c62n","_id":"cjttk83od0012lcqjtum2fx61"},{"post_id":"cjttk83nu000ilcqj3w95j6en","category_id":"cjttk83ob000ylcqj1f135zl7","_id":"cjttk83of0016lcqjf51sypn4"},{"post_id":"cjttk83o4000rlcqjpoufzpsw","category_id":"cjttk83ob000ylcqj1f135zl7","_id":"cjttk83of0017lcqjqiwwbpo6"},{"post_id":"cjttk83pj0018lcqjq5o4tjac","category_id":"cjttk83n30004lcqj4qmowl8a","_id":"cjttk83po001blcqjl6s01x4p"}],"PostTag":[{"post_id":"cjttk83mm0000lcqjkm4bn61t","tag_id":"cjttk83n60005lcqji2nv86tz","_id":"cjttk83nj000clcqjychw1aub"},{"post_id":"cjttk83n60006lcqjswu3yzgx","tag_id":"cjttk83nd000blcqj6c9xkue0","_id":"cjttk83o3000qlcqjw13f4r5v"},{"post_id":"cjttk83n60006lcqjswu3yzgx","tag_id":"cjttk83nt000hlcqjp8hrdj9q","_id":"cjttk83o7000ulcqjqssloyn4"},{"post_id":"cjttk83o2000olcqj3al5ubrr","tag_id":"cjttk83nd000blcqj6c9xkue0","_id":"cjttk83o9000xlcqjpweqt9z1"},{"post_id":"cjttk83na0008lcqjyncemvrc","tag_id":"cjttk83o1000nlcqj6y2y852z","_id":"cjttk83od0011lcqj8z6qx5yt"},{"post_id":"cjttk83na0008lcqjyncemvrc","tag_id":"cjttk83o8000vlcqjjav5wpb2","_id":"cjttk83oe0014lcqjhhw06a9q"},{"post_id":"cjttk83no000elcqj8w1vujkc","tag_id":"cjttk83oc0010lcqj2t1pbu6d","_id":"cjttk83of0015lcqjubu68xua"},{"post_id":"cjttk83pj0018lcqjq5o4tjac","tag_id":"cjttk83pn001alcqj71ug7wme","_id":"cjttk83pp001clcqj85pi5brz"}],"Tag":[{"name":"Java","_id":"cjttk83n60005lcqji2nv86tz"},{"name":"开发相关","_id":"cjttk83nd000blcqj6c9xkue0"},{"name":"Flume","_id":"cjttk83nt000hlcqjp8hrdj9q"},{"name":"axios","_id":"cjttk83o1000nlcqj6y2y852z"},{"name":"CORS","_id":"cjttk83o8000vlcqjjav5wpb2"},{"name":"react ES6","_id":"cjttk83oc0010lcqj2t1pbu6d"},{"name":"LeetCode","_id":"cjttk83pn001alcqj71ug7wme"}]}}